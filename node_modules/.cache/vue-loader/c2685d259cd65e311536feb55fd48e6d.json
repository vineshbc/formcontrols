{"remainingRequest":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mobiotics/Projects/hancom/formcontrols/src/FormDesigner/components/organisms/FDGroupControl/index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/mobiotics/Projects/hancom/formcontrols/src/FormDesigner/components/organisms/FDGroupControl/index.vue","mtime":1610544258558},{"path":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/FormDesigner/components/organisms/FDGroupControl","sourcesContent":["<template>\n  <div v-if=\"groupedControls[userFormId].groupArray.length!==0\">\n   <div\n      v-for=\"(groupName, index) in groupedControls[userFormId].groupArray\"\n      :class=\"getGroupEditStyle(groupName)\"\n      :key=\"groupName.concat(index)\"\n      :style=\"getGroupStyle(groupName)\"\n      :id=\"groupName\"\n      @mousedown.stop=\"handleMouseDown($event,'drag')\"\n      @contextmenu.self.stop=\"openMenu($event,'control')\"\n    >\n    <div\n    :style=\"getGroupStyle(groupName)\"\n    class=\"innerGroupStyle\"\n    :id=\"groupName\"\n    @contextmenu=\"openMenu($event,'container')\"\n    >\n    <div class=\"handle handle-tl\" :style=\"handlerStyle(groupName)\" @mousedown.stop=\"handleMouseDown($event,'tl')\"></div>\n      <div class=\"handle handle-tr\" :style=\"handlerStyle(groupName)\" @mousedown.stop=\"handleMouseDown($event,'tr')\"></div>\n      <div class=\"handle handle-tm\" :style=\"handlerStyle(groupName)\" @mousedown.stop=\"handleMouseDown($event,'tm')\"></div>\n      <div class=\"handle handle-ml\" :style=\"handlerStyle(groupName)\" @mousedown.stop=\"handleMouseDown($event,'ml')\"></div>\n      <div class=\"handle handle-mr\" :style=\"handlerStyle(groupName)\" @mousedown.stop=\"handleMouseDown($event,'mr')\"></div>\n      <div class=\"handle handle-bl\" :style=\"handlerStyle(groupName)\" @mousedown.stop=\"handleMouseDown($event,'bl')\"></div>\n      <div class=\"handle handle-br\" :style=\"handlerStyle(groupName)\" @mousedown.stop=\"handleMouseDown($event,'br')\"></div>\n      <div class=\"handle handle-bm\" :style=\"handlerStyle(groupName)\" @mousedown.stop=\"handleMouseDown($event,'bm')\"></div>\n    </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue, Prop, Watch, Ref } from 'vue-property-decorator'\nimport {\n  IselectControl,\n  IupdateControl,\n  IupdateGroup\n} from '@/storeModules/fd/actions'\nimport { State, Action } from 'vuex-class'\nimport { EventBus } from '@/FormDesigner/event-bus'\nimport FDCommonMethod from '@/api/abstract/FormDesigner/FDCommonMethod'\n@Component({\n  name: 'GroupControl',\n  components: {}\n})\nexport default class GroupControl extends FDCommonMethod {\n  @State((state) => state.fd.groupedControls) groupedControls!: groupedControls;\n  @State((state) => state.fd.selectedControls)\n  selectedControls!: fdState['selectedControls'];\n  @State((state) => state.fd.userformData) userformData!: userformData;\n\n  @Prop({ required: true, type: Array }) public currentSelectedGroup!: string[];\n  @Prop({ required: true, type: String }) public userFormId!: string;\n  @Prop({ required: true, type: String }) public containerId!: string;\n  @Prop() controlRef: any;\n\n  @Action('fd/updateControl') updateControl!: (payload: IupdateControl) => void;\n  @Action('fd/updateGroup') updateGroup!: (payload: IupdateGroup) => void;\n  @Action('fd/selectControl') selectControl!: (payload: IselectControl) => void;\n\n  divStyleArray: Array<IGroupStyle> = [];\n  resizeDiv: string = '';\n\n  positions: IMousePosition = {\n    clientX: 0,\n    clientY: 0,\n    movementX: 0,\n    movementY: 0,\n    offsetX: 0,\n    offsetY: 0\n  };\n  groupName: string = '';\n  count: number = 0;\n  currentMouseDownEvent: CustomMouseEvent | null = null;\n  control: string = ''\n  container: string = ''\n  createGroup (groupName: string) {\n    this.groupStyle(groupName)\n  }\n  value = 'different'\n  isMainSelect = false;\n  isMove: boolean = false\n  tempEvent = {}\n\n  created () {\n    EventBus.$on('getGroupMoveValue', this.getGroupMoveValue)\n    EventBus.$on('startGroupMoveControl', this.startGroupMoveControl)\n    EventBus.$on('moveGroupControl', this.moveGroupControl)\n    EventBus.$on('endGroupMoveControl', this.endGroupMoveControl)\n    EventBus.$on('getClientValue', this.getClientValue)\n    EventBus.$on('updasteGroupSize', this.updasteGroupSize)\n    EventBus.$on('getGroupSize', this.getGroupSize)\n  }\n  destroyed () {\n    EventBus.$off('getGroupMoveValue', this.getGroupMoveValue)\n    EventBus.$off('startGroupMoveControl', this.startGroupMoveControl)\n    EventBus.$off('moveGroupControl', this.moveGroupControl)\n    EventBus.$off('endGroupMoveControl', this.endGroupMoveControl)\n    EventBus.$off('getClientValue', this.getClientValue)\n    EventBus.$off('updasteGroupSize', this.updasteGroupSize)\n    EventBus.$on('getGroupSize', this.getGroupSize)\n  }\n  updasteGroupSize (propName: keyof controlProperties, propertyValue: number, groupIndex: number) {\n    if (this.selectedControls[this.userFormId].container[0] === this.containerId) {\n      if (propName === 'GroupID') {\n        this.divStyleArray[groupIndex].left = `${Math.trunc(parseInt(this.divStyleArray[groupIndex].left!))}px`\n        this.divStyleArray[groupIndex].height = `${Math.trunc(parseInt(this.divStyleArray[groupIndex].height!))}px`\n        this.divStyleArray[groupIndex].top = `${Math.trunc(parseInt(this.divStyleArray[groupIndex].top!))}px`\n        this.divStyleArray[groupIndex].width = `${Math.trunc(parseInt(this.divStyleArray[groupIndex].width!))}px`\n      } else {\n        this.groupStyle(this.divStyleArray[groupIndex].groupName!)\n        this.updatedValue(groupIndex, propName, propertyValue)\n        this.groupStyle(this.divStyleArray[groupIndex].groupName!)\n      }\n    }\n  }\n  updatedValue (groupIndex: number, propName: keyof controlProperties, diff: number) {\n    for (const j in this.userformData[this.userFormId][this.containerId].controls) {\n      const index = this.userformData[this.userFormId][this.containerId].controls[j]\n      const controlProp = this.userformData[this.userFormId][index].properties\n      const divStyle = this.divStyleArray[groupIndex]\n      if (controlProp.GroupID && controlProp.GroupID === divStyle.groupName) {\n        if (propName === 'Left') {\n          let left: number = diff + this.leftArray[j]\n          this.updateControlAction(propName, left, index)\n        } else if (propName === 'Top') {\n          let top: number = diff + this.topArray[j]\n          this.updateControlAction(propName, top, index)\n        } else if (propName === 'Width') {\n          let left = (diff * this.leftArray[j]) / parseInt(divStyle.width!) + parseInt(divStyle.left!)\n          let width = diff * this.percwidthArray[j]\n          this.updateControlAction('Left', left, index)\n          this.updateControlAction(propName, width, index)\n        } else if (propName === 'Height') {\n          let top = (diff * this.topArray[j]) / parseInt(divStyle.height!) + parseInt(divStyle.top!)\n          let height = diff * this.percheightArray[j]\n          this.updateControlAction('Top', top, index)\n          this.updateControlAction(propName, height, index)\n        }\n      }\n    }\n  }\n  getClientValue (value: string, containerX: number, containerY: number, event: MouseEvent, container: string, previousEvent: MouseEvent) {\n    this.value = value\n    this.container = container\n    if (container === this.containerId) {\n      this.positions.clientX = previousEvent.clientX\n      this.positions.clientY = previousEvent.clientY\n      this.positions.offsetX = previousEvent.offsetX\n      this.positions.offsetY = previousEvent.offsetY\n      this.elementMouseDrag(event, containerX, containerY, previousEvent)\n    }\n  }\n  getGroupMoveValue (callBack: Function) {\n    callBack(\n      this.positions.offsetX,\n      this.positions.offsetY,\n      this.control,\n      this.tempEvent\n    )\n  }\n  getGroupSize (callBack: Function) {\n    if (this.containerId === this.selectedControls[this.userFormId].container[0]) {\n      callBack(this.divStyleArray)\n    }\n  }\n  endGroupMoveControl () {\n    // if (this.getIsMoveTarget) {\n    this.positions.movementX = 0\n    this.positions.movementY = 0\n    // this.isMove = false\n    // }\n  }\n  topArray: number[] = [];\n  leftArray: number[] = [];\n\n  percwidthArray: number[] = [];\n  percheightArray: number[] = [];\n\n  initialArray: Array<IGroupStyle> = [];\n\n  get getIsMoveTarget () {\n    const isGroupPrsent = this.selectedControls[this.userFormId].selected.findIndex((val: string) => {\n      val.startsWith('group')\n    })\n    return isGroupPrsent === -1\n  }\n  startGroupMoveControl (event: MouseEvent) {\n    if (this.getIsMoveTarget) {\n      this.positions.clientX = event.clientX\n      this.positions.clientY = event.clientY\n    }\n  }\n\n  moveGroupControl (event: MouseEvent) {\n    if (this.getIsMoveTarget) {\n      //   this.moveBorder(event)\n      if (event.movementX !== 0 && event.movementY !== 0) {\n        EventBus.$emit('groupDrag', 'groupdrag')\n        this.isMove = true\n        // this.updateIsMove(true)\n      }\n    }\n  }\n\n  updateControlAction (\n    propertyName: keyof controlProperties,\n    propertyValue: number,\n    controlId: string\n  ) {\n    this.updateControl({\n      userFormId: this.userFormId,\n      controlId: controlId,\n      propertyName: propertyName,\n      value: propertyValue\n    })\n  }\n  handlerStyle (groupName: string) {\n    const isGroup: string = this.selectedControls[this.userFormId].selected[0]\n    return {\n      backgroundColor: isGroup === groupName ? 'white' : 'black',\n      borderColor: isGroup === groupName ? 'black' : 'white'\n    }\n  }\n  groupStyle (groupName: string) {\n    this.count += 1\n    let index = this.divStyleArray.findIndex(\n      (p: IGroupStyle) => p.groupName === groupName\n    )\n    if (index === -1) {\n      this.divStyleArray.push({\n        left: '0px',\n        top: '0px',\n        width: '0px',\n        height: '0px',\n        display: 'none',\n        groupName: groupName\n      })\n    }\n    const styleLeft: number[] = []\n    const styleWidth: number[] = []\n    const styleTop: number[] = []\n    const styleHeight: number[] = []\n    for (const control of this.userformData[this.userFormId][this.containerId]\n      .controls) {\n      if (\n        this.userformData[this.userFormId][control].properties.GroupID ===\n        groupName\n      ) {\n        const controlprop = this.userformData[this.userFormId][control]\n          .properties\n        styleLeft.push(controlprop.Left!)\n        styleTop.push(controlprop.Top!)\n        styleWidth.push(controlprop.Width! + controlprop.Left!)\n        styleHeight.push(controlprop.Height! + controlprop.Top!)\n      }\n    }\n    index = this.divStyleArray.findIndex(\n      (p: IGroupStyle) => p.groupName === groupName\n    )\n    this.divStyleArray[index].left = `${Math.min(...styleLeft)}px`\n    this.divStyleArray[index].top = `${Math.min(...styleTop)}px`\n    this.divStyleArray[index].width = `${\n      Math.max(...styleWidth) - Math.min(...styleLeft)\n    }px`\n    this.divStyleArray[index].height = `${\n      Math.max(...styleHeight) - Math.min(...styleTop)\n    }px`\n\n    this.topArray = []\n    this.leftArray = []\n\n    this.percwidthArray = []\n    this.percheightArray = []\n\n    for (const control of this.userformData[this.userFormId][this.containerId].controls) {\n      const controlProp = this.userformData[this.userFormId][control].properties\n      if (this.userformData[this.userFormId][control].type !== 'Useform') {\n        if (controlProp.GroupID !== '') {\n          for (const divStyle of this.divStyleArray) {\n            if (controlProp.GroupID === divStyle.groupName) {\n              this.topArray.push(controlProp.Top! - parseInt(divStyle.top!))\n\n              this.leftArray.push(controlProp.Left! - parseInt(divStyle.left!))\n\n              this.percheightArray.push(\n              controlProp.Height! / parseInt(divStyle.height!)\n              )\n\n              this.percwidthArray.push(\n              controlProp.Width! / parseInt(divStyle.width!)\n              )\n            }\n          }\n        } else {\n          this.topArray.push(controlProp.Top!)\n\n          this.leftArray.push(controlProp.Left!)\n\n          this.percheightArray.push(controlProp.Height!)\n\n          this.percwidthArray.push(controlProp.Width!)\n        }\n      }\n    }\n    this.initialArray = []\n    for (let k = 0; k < this.divStyleArray.length; k++) {\n      this.initialArray.push(Object.assign({}, this.divStyleArray[k]))\n    }\n  }\n\n  deActGroupControl () {\n    const selControl = this.selectedControls[this.userFormId].selected\n    if (\n      this.currentSelectedGroup.length === 1 &&\n      selControl.length === 1 &&\n      !selControl[0].startsWith('group')\n    ) {\n      const controlId = this.selectedControls[this.userFormId].selected[0]\n      if (\n        this.currentSelectedGroup[0] ===\n        this.userformData[this.userFormId][controlId].properties.GroupID!\n      ) {\n        this.selectControl({\n          userFormId: this.userFormId,\n          select: {\n            container: this.getContainerList(this.currentSelectedGroup[0]),\n            selected: [this.currentSelectedGroup[0]]\n          }\n        })\n      }\n    }\n  }\n\n  handleMouseDown (event: CustomMouseEvent, handler: string) {\n    this.tempEvent = event\n    EventBus.$emit('groupDrag', 'NotDrag')\n    this.isMove = false\n    this.deActGroupControl()\n    this.resizeDiv = handler\n    this.positions.clientX = event.clientX\n    this.positions.clientY = event.clientY\n    this.currentMouseDownEvent = event\n    if (handler !== 'drag') {\n      document.onmousemove = this.elementDrag\n    } else {\n      this.positions.offsetX = event.offsetX\n      this.positions.offsetY = event.offsetY\n      this.isMainSelect = true\n      EventBus.$emit('startGroupMoveControl', event)\n      document.onmousemove = (event: MouseEvent) => {\n        EventBus.$emit('moveGroupControl', event)\n      }\n    }\n    document.onmouseup = (event) => {\n      this.closeDragElement(event, handler)\n    }\n  }\n  elementMouseDrag (event: MouseEvent, containerX: number, containerY: number, previousEvent: MouseEvent): void {\n    event.preventDefault()\n    if (this.container === this.containerId) {\n      for (const i of this.selectedControls[this.userFormId].selected) {\n        if (i.startsWith('group')) {\n          const index = this.divStyleArray.findIndex(val => val.groupName === i)\n          this.divStyleArray[index].display = 'block'\n          this.groupStyle(this.divStyleArray[index].groupName!)\n        }\n      }\n      this.resizeDiv = 'drag'\n      let targetLeft = -1\n      let targetTop = -1\n      const main = this.selectedControls[this.userFormId].selected[0]\n      const isGroup = main.startsWith('group') ? this.divStyleArray.findIndex(val => val.groupName === main) : -1\n      if (isGroup === -1) {\n        const targetData = this.userformData[this.userFormId][main].properties\n        targetLeft = targetData.Left!\n        targetTop = targetData.Top!\n      } else {\n        const targetData = this.divStyleArray[isGroup]\n        targetLeft = parseInt(targetData.left!)\n        targetTop = parseInt(targetData.top!)\n      }\n      this.positions.movementX = (targetLeft) - (containerX - (this.positions.offsetX!))\n      this.positions.movementY = (targetTop) - (containerY - (this.positions.offsetY!))\n      const scale: number = 1\n      const grid: Array<number> = [10, 10]\n      const x: number =\n      Math.round(this.positions.movementX / scale / grid[0]) * grid[0]\n      const y: number =\n      Math.round(this.positions.movementY / scale / grid[1]) * grid[1]\n\n      if (this.currentMouseDownEvent && (x !== 0 || y !== 0)) {\n        this.currentMouseDownEvent.customCallBack &&\n        this.currentMouseDownEvent.customCallBack()\n      }\n      let dragResizeControl: IGroupStyle = {}\n      let dragResizeControl1: controlProperties = { ID: '' }\n\n      for (let i = 0; i < this.divStyleArray.length; i++) {\n        this.groupName = this.divStyleArray[i].groupName!\n        dragResizeControl = this.divStyleArray[i]\n        if (dragResizeControl.display === 'block') {\n          let top: number = -1\n          let left: number = -1\n          let decHeight: number = -1\n          top = parseInt(dragResizeControl.top!) - y\n          left = parseInt(dragResizeControl.left!) - x\n\n          if (this.resizeDiv === 'drag') {\n            dragResizeControl.top = `${top}px`\n            dragResizeControl.left = `${left}px`\n          }\n          for (const j in this.userformData[this.userFormId][this.containerId]\n            .controls) {\n            const index = this.userformData[this.userFormId][this.containerId]\n              .controls[j]\n            const controlProp = this.userformData[this.userFormId][index]\n              .properties\n            if (\n              controlProp.GroupID === this.divStyleArray[i].groupName &&\n            this.divStyleArray[i].display === 'block'\n            ) {\n              dragResizeControl1 = controlProp\n              if (this.resizeDiv === 'drag') {\n                top = dragResizeControl1.Top! - y\n                left = dragResizeControl1.Left! - x\n                this.updateControlAction('Top', top, index)\n                this.updateControlAction('Left', left, index)\n              }\n            }\n          }\n        }\n      }\n      for (let k of this.selectedControls[this.userFormId].selected) {\n        if (!k.startsWith('ID_USERFORM') && !k.startsWith('group')) {\n          let dragResizeReffer: IdragResizeRefStyle = {}\n          const control: controlProperties = this.userformData[this.userFormId][k]\n            .properties\n          for (const key in this.controlRef.resizeControl) {\n            if (\n              this.controlRef.resizeControl[key].$refs['draRef'.concat(control.ID)] !== undefined\n            ) {\n              dragResizeReffer = this.controlRef.resizeControl[key].$refs['draRef'.concat(control.ID)]\n            }\n          }\n          const top = control.Top! - y\n          const left = control.Left! - x\n\n          if (this.resizeDiv === 'drag') {\n            this.updateControlAction('Top', top, k)\n            this.updateControlAction('Left', left, k)\n          }\n        }\n      }\n    }\n  }\n\n  elementDrag (event: MouseEvent): void {\n    event.preventDefault()\n    this.positions.movementX = this.positions.clientX - event.clientX\n    this.positions.movementY = this.positions.clientY - event.clientY\n    const scale: number = 1\n    const grid: Array<number> = [10, 10]\n    const x: number =\n      Math.round(this.positions.movementX / scale / grid[0]) * grid[0]\n    const y: number =\n      Math.round(this.positions.movementY / scale / grid[1]) * grid[1]\n\n    if (this.currentMouseDownEvent && (x !== 0 || y !== 0)) {\n      this.currentMouseDownEvent.customCallBack &&\n        this.currentMouseDownEvent.customCallBack()\n    }\n    const diffGridX: number = x - this.positions.movementX\n    const diffGridY: number = y - this.positions.movementY\n\n    this.positions.clientX = event.clientX - diffGridX\n    this.positions.clientY = event.clientY - diffGridY\n\n    let dragResizeControl: IGroupStyle = {}\n    let dragResizeControl1: controlProperties = { ID: '' }\n\n    for (let i = 0; i < this.divStyleArray.length; i++) {\n      this.groupName = this.divStyleArray[i].groupName!\n      dragResizeControl = this.divStyleArray[i]\n      if (dragResizeControl.display === 'block') {\n        let top: number = -1\n        let left: number = -1\n        let incWidth: number = -1\n        let incHeight: number = -1\n        let decWidth: number = -1\n        let decHeight: number = -1\n        top = parseInt(dragResizeControl.top!) - y\n        left = parseInt(dragResizeControl.left!) - x\n        incWidth =\n          parseInt(dragResizeControl.width!) + x > 0\n            ? parseInt(dragResizeControl.width!) + x\n            : 0\n        incHeight =\n          parseInt(dragResizeControl.height!) + y > 0\n            ? parseInt(dragResizeControl.height!) + y\n            : 0\n        decWidth =\n          parseInt(dragResizeControl.width!) - x > 0\n            ? parseInt(dragResizeControl.width!) - x\n            : 0\n        decHeight =\n          parseInt(dragResizeControl.height!) - y > 0\n            ? parseInt(dragResizeControl.height!) - y\n            : 0\n\n        if (this.resizeDiv === 'drag') {\n          dragResizeControl.top = `${top}px`\n          dragResizeControl.left = `${left}px`\n        } else {\n          if (this.resizeDiv.includes('t')) {\n            if (incHeight > 0) {\n              dragResizeControl.top = `${top}px`\n            }\n            dragResizeControl.height = `${incHeight}px`\n          } else if (this.resizeDiv.includes('b')) {\n            dragResizeControl.height = `${decHeight}px`\n          }\n\n          if (this.resizeDiv.includes('l')) {\n            if (incWidth > 0) {\n              dragResizeControl.left = `${left}px`\n            }\n            dragResizeControl.width = `${incWidth}px`\n          } else if (this.resizeDiv.includes('r')) {\n            dragResizeControl.width = `${decWidth}px`\n          }\n        }\n        for (const j in this.userformData[this.userFormId][this.containerId]\n          .controls) {\n          const index = this.userformData[this.userFormId][this.containerId]\n            .controls[j]\n          const controlProp = this.userformData[this.userFormId][index]\n            .properties\n\n          let top: number =\n            (parseInt(dragResizeControl.height!) * this.topArray[j]) /\n              parseInt(this.initialArray[i].height!) +\n            parseInt(this.initialArray[i].top!)\n\n          let height: number =\n            parseInt(dragResizeControl.height!) * this.percheightArray[j]\n\n          let left: number =\n            (parseInt(dragResizeControl.width!) * this.leftArray[j]) /\n              parseInt(this.initialArray[i].width!) +\n            parseInt(this.initialArray[i].left!)\n\n          let width: number =\n            parseInt(dragResizeControl.width!) * this.percwidthArray[j]\n\n          let right: number =\n            (parseInt(dragResizeControl.width!) * this.leftArray[j]) /\n              parseInt(this.initialArray[i].width!) +\n            parseInt(dragResizeControl.left!)\n\n          let bottom: number =\n            (parseInt(dragResizeControl.height!) * this.topArray[j]) /\n              parseInt(this.initialArray[i].height!) +\n            parseInt(dragResizeControl.top!)\n          if (\n            controlProp.GroupID === this.divStyleArray[i].groupName &&\n            this.divStyleArray[i].display === 'block'\n          ) {\n            dragResizeControl1 = controlProp\n            if (this.resizeDiv === 'drag') {\n              top = dragResizeControl1.Top! - y\n              left = dragResizeControl1.Left! - x\n              this.updateControlAction('Top', top, index)\n              this.updateControlAction('Left', left, index)\n            } else {\n              if (this.resizeDiv.includes('t')) {\n                this.updateControlAction('Top', bottom, index)\n                this.updateControlAction('Height', height, index)\n              } else if (this.resizeDiv.includes('b')) {\n                this.updateControlAction('Top', top, index)\n                this.updateControlAction('Height', height, index)\n              }\n              if (this.resizeDiv.includes('l')) {\n                this.updateControlAction('Left', right, index)\n                this.updateControlAction('Width', width, index)\n              } else if (this.resizeDiv.includes('r')) {\n                this.updateControlAction('Left', left, index)\n                this.updateControlAction('Width', width, index)\n              }\n            }\n          }\n        }\n      }\n    }\n    for (let k of this.selectedControls[this.userFormId].selected) {\n      if (!k.startsWith('ID_USERFORM') && !k.startsWith('group')) {\n        let dragResizeReffer: IdragResizeRefStyle = {}\n        const control: controlProperties = this.userformData[this.userFormId][k]\n          .properties\n        for (const key in this.controlRef.resizeControl) {\n          if (\n            this.controlRef.resizeControl[key].$refs['draRef'.concat(control.ID)] !== undefined\n          ) {\n            dragResizeReffer = this.controlRef.resizeControl[key].$refs['draRef'.concat(control.ID)]\n          }\n        }\n        const top = dragResizeReffer.offsetTop! - y\n        const left = dragResizeReffer.offsetLeft! - x\n        const incWidth = control.Width! + x > 0 ? control.Width! + x : 0\n        const incHeight = control.Height! + y > 0 ? control.Height! + y : 0\n        const decWidth = control.Width! - x > 0 ? control.Width! - x : 0\n        const decHeight = control.Height! - y > 0 ? control.Height! - y : 0\n\n        if (this.resizeDiv === 'drag') {\n          this.updateControlAction('Top', top, k)\n          this.updateControlAction('Left', left, k)\n        } else {\n          if (this.resizeDiv.includes('t')) {\n            if (incHeight > 0) {\n              this.updateControlAction('Top', top, k)\n            }\n            this.updateControlAction('Height', incHeight, k)\n          } else if (this.resizeDiv.includes('b')) {\n            this.updateControlAction('Height', decHeight, k)\n          }\n          if (this.resizeDiv.includes('l')) {\n            if (incWidth > 0) {\n              this.updateControlAction('Left', left, k)\n            }\n            this.updateControlAction('Width', incWidth, k)\n          } else if (this.resizeDiv.includes('r')) {\n            this.updateControlAction('Width', decWidth, k)\n          }\n        }\n      }\n    }\n  }\n  openContextMenu (e: MouseEvent, parentID: string, controlID: string, type: string) {\n    this.$emit('openMenu', e, parentID, controlID, type)\n  }\n  openMenu (event: MouseEvent, type: string) {\n    event.preventDefault()\n    event.stopPropagation()\n    const container = this.selectedControls[this.userFormId].container[0]\n    let controlId = container\n    if (type === 'control') {\n      controlId = this.getSelectedControlsDatas![0]\n    }\n    this.openContextMenu(event, container, controlId, type)\n  }\n\n  closeDragElement (event:MouseEvent, handler: string): void {\n    if (this.value === 'same') {\n      this.elementDrag(event)\n    } else {\n      this.value = 'different'\n    }\n    EventBus.$emit('groupDrag', 'NotDrag')\n    EventBus.$emit('endGroupMoveControl')\n    document.onmouseup = null\n    document.onmousemove = null\n    if (handler === 'drag') {\n      const selected = this.selectedControls[this.userFormId].selected\n      for (const grpname in selected) {\n        if (selected[grpname].startsWith('group')) {\n          this.groupStyle(selected[grpname])\n        }\n      }\n    }\n    for (const controlGroup in this.divStyleArray) {\n      const groupName = this.divStyleArray[controlGroup].groupName!\n      if (groupName.startsWith('group')) {\n        this.groupStyle(groupName)\n      }\n    }\n  }\n  getGroupEditStyle (groupName: string) {\n    const selected = this.selectedControls[this.userFormId].selected\n    const isSelected =\n      selected.length === 1 &&\n      !selected[0].startsWith('group') &&\n      this.userformData[this.userFormId][selected[0]].properties.GroupID ===\n        groupName\n    return isSelected ? 'mainEditDiv' : 'mainDiv'\n  }\n  getGroupStyle (groupName: string) {\n    return this.divStyleArray[this.divStyleArray.findIndex((p) => p.groupName === groupName)]\n  }\n\n  @Watch('selectedControls', { deep: true })\n  updateGroupStyle () {\n    const selectedContainer = this.selectedControls[this.userFormId].container[0]\n    if (selectedContainer !== this.containerId && this.isMove) {\n      const selected = this.selectedControls[this.userFormId].selected\n      for (const grpname in selected) {\n        if (selected[grpname].startsWith('group')) {\n          const fingGroupIndex = this.divStyleArray.findIndex(val => val.groupName === selected[grpname])\n          this.divStyleArray.splice(fingGroupIndex, 1)\n        }\n      }\n    }\n    if (this.divStyleArray.length > 0 && selectedContainer === this.containerId) {\n      for (const index in this.divStyleArray) {\n        this.divStyleArray[index].display = 'none'\n      }\n      const selControl = this.selectedControls[this.userFormId].selected\n      if (selControl.length >= 1) {\n        for (const val of this.getSelectedControlsDatas!) {\n          const groupId = this.userformData[this.userFormId][val].properties.GroupID!\n          if (groupId) {\n            const index = this.divStyleArray.findIndex(\n              (p) => p.groupName === groupId\n            )\n            this.divStyleArray[index].display = 'block'\n          }\n        }\n      } else {\n        if (\n          selControl[0].startsWith('group') ||\n          (!selControl[0].startsWith('group') &&\n            selControl.includes(\n              this.userformData[this.userFormId][selControl[0]].properties\n                .GroupID!\n            ))\n        ) {\n          if (selControl[0].startsWith('group')) {\n            const index = this.divStyleArray.findIndex(\n              (p) => p.groupName === selControl[0]\n            )\n            if (index !== -1) {\n              this.divStyleArray[index].display = 'block'\n            }\n          } else {\n            const index = this.divStyleArray.findIndex(\n              (p) =>\n                p.groupName ===\n                this.userformData[this.userFormId][selControl[0]].properties\n                  .GroupID!\n            )\n            if (index !== -1) {\n              this.divStyleArray[index].display = 'block'\n            }\n          }\n        }\n      }\n    } else {\n      for (const index in this.divStyleArray) {\n        this.divStyleArray[index].display = 'none'\n      }\n    }\n  }\n}\n</script>\n\n<style  scoped>\n.move-border {\n  z-index: 9999;\n  position: absolute;\n  border: 1px rgb(59, 58, 58) dashed;\n}\n.m-top-b,\n.m-bottom-b {\n  width: 100%;\n}\n.m-left-b,\n.m-right-b {\n  height: 100%;\n}\n.handle {\n  box-sizing: border-box;\n  position: absolute;\n  width: 6px;\n  height: 6px;\n  background: white;\n  border: 1px solid #333;\n}\n.handleActivate {\n  box-sizing: border-box;\n  position: absolute;\n  width: 6px;\n  height: 6px;\n\n  background: black;\n  border: 1px solid white;\n}\n.handle-tl {\n  top: -5px;\n  left: -5px;\n  cursor: nw-resize;\n}\n.handle-tm {\n  top: -5px;\n  left: 50%;\n  margin-left: -5px;\n  cursor: n-resize;\n}\n.handle-tr {\n  top: -5px;\n  right: -5px;\n  cursor: ne-resize;\n}\n.handle-ml {\n  top: 50%;\n  margin-top: -5px;\n  left: -5px;\n  cursor: w-resize;\n}\n.handle-mr {\n  top: 50%;\n  margin-top: -5px;\n  right: -5px;\n  cursor: e-resize;\n}\n.handle-bl {\n  bottom: -5px;\n  left: -5px;\n  cursor: sw-resize;\n}\n.handle-bm {\n  bottom: -5px;\n  left: 50%;\n  margin-left: -5px;\n  cursor: s-resize;\n}\n.handle-br {\n  bottom: -5px;\n  right: -5px;\n  cursor: se-resize;\n}\n.mainDiv {\n  cursor: move;\n  position: absolute;\n  --border-width: 5;\n  --stripe-distance: 2px;\n  border: calc(var(--border-width) * 1px) solid transparent;\n  border-image: repeating-linear-gradient(\n      -110deg,\n      black,\n      transparent 1px,\n      transparent var(--stripe-distance),\n      black calc(var(--stripe-distance) + 0.2px)\n    )\n    var(--border-width);\n  padding: 5px;\n  margin-top: -5px;\n  margin-left: -5px;\n  display: none;\n}\n.mainEditDiv {\n  position: absolute;\n  cursor: move;\n  --border-width: 5;\n  --stripe-distance: 2px;\n  border: calc(var(--border-width) * 1px) solid transparent;\n  border-image: repeating-linear-gradient(\n      -45deg,\n      black,\n      transparent 2px,\n      transparent var(--stripe-distance),\n      black calc(var(--stripe-distance) + 0.2px)\n    )\n    var(--border-width);\n  padding: 5px;\n  margin-top: -5px;\n  margin-left: -5px;\n  display: none;\n}\n.innerGroupStyle {\n    margin-top: -5px;\n    margin-left: -5px;\n    padding-right: 10px;\n    padding-bottom: 10px;\n}\n.handle {\n  box-sizing: border-box;\n  position: absolute;\n  width: 6px;\n  height: 6px;\n  background: white;\n  border: 1px solid #333;\n}\n.handle-tl {\n  top: -5px;\n  left: -5px;\n  cursor: nw-resize;\n}\n.handle-tm {\n  top: -5px;\n  left: 50%;\n  margin-left: -5px;\n  cursor: n-resize;\n}\n.handle-tr {\n  top: -5px;\n  right: -5px;\n  cursor: ne-resize;\n}\n.handle-ml {\n  top: 50%;\n  margin-top: -5px;\n  left: -5px;\n  cursor: w-resize;\n}\n.handle-mr {\n  top: 50%;\n  margin-top: -5px;\n  right: -5px;\n  cursor: e-resize;\n}\n.handle-bl {\n  bottom: -5px;\n  left: -5px;\n  cursor: sw-resize;\n}\n.handle-bm {\n  bottom: -5px;\n  left: 50%;\n  margin-left: -5px;\n  cursor: s-resize;\n}\n.handle-br {\n  bottom: -5px;\n  right: -5px;\n  cursor: se-resize;\n}\n</style>\n"]}]}