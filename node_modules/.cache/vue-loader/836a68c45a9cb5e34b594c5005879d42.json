{"remainingRequest":"/home/mobiotics/Projects/formcontrols/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mobiotics/Projects/formcontrols/src/FormDesigner/components/organisms/FDToolBox/index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/mobiotics/Projects/formcontrols/src/FormDesigner/components/organisms/FDToolBox/index.vue","mtime":1610544258558},{"path":"/home/mobiotics/Projects/formcontrols/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/formcontrols/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/formcontrols/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/formcontrols/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/formcontrols/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKaW1wb3J0IHsgdG9vbEJveCB9IGZyb20gJy4uLy4uLy4uL21vZGVscy90b29sQm94JwppbXBvcnQgeyBDb21wb25lbnQsIFZ1ZSwgUHJvcCwgV2F0Y2gsIFJlZiB9IGZyb20gJ3Z1ZS1wcm9wZXJ0eS1kZWNvcmF0b3InCmltcG9ydCB7IFN0YXRlLCBBY3Rpb24gfSBmcm9tICd2dWV4LWNsYXNzJwppbXBvcnQgVXNlU3ZnSW1hZ2UgZnJvbSAnLi4vLi4vYXRvbXMvRkRTVkdJbWFnZS9pbmRleC52dWUnCmltcG9ydCB7IEljaGFuZ2VUb29sQm94U2VsZWN0IH0gZnJvbSAnLi4vLi4vLi4vLi4vc3RvcmVNb2R1bGVzL2ZkL2FjdGlvbnMnCmltcG9ydCB7IFBheWxvYWQgfSBmcm9tICd2dWV4JwppbnRlcmZhY2UgSVRvb2xib3ggewogIG5hbWU6IHN0cmluZzsKICBpY29uOiBzdHJpbmc7Cn0KaW50ZXJmYWNlIElSZWYgewogIFtpY29uczogc3RyaW5nXTogW107Cn0KaW50ZXJmYWNlIElzdHlsZSB7CiAgaWQ6IHN0cmluZzsKICBzdHlsZTogewogICAgYm9yZGVyUmlnaHQ6IHN0cmluZzsKICAgIGJvcmRlckJvdHRvbTogc3RyaW5nOwogICAgYm9yZGVyV2lkdGg6IHN0cmluZzsKICAgIGJvcmRlclN0eWxlOiBzdHJpbmc7CiAgfTsKfQpAQ29tcG9uZW50KHsKICBuYW1lOiAnVG9vbEJveCcsCiAgY29tcG9uZW50czogewogICAgVXNlU3ZnSW1hZ2UKICB9Cn0pCmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRvb2xCb3ggZXh0ZW5kcyBWdWUgewogIEBTdGF0ZSgoc3RhdGU6cm9vdFN0YXRlKSA9PiBzdGF0ZS5mZC50b29sQm94U2VsZWN0KSB0b29sQm94U2VsZWN0ITogZmRTdGF0ZVsndG9vbEJveFNlbGVjdCddCiAgQEFjdGlvbignZmQvY2hhbmdlVG9vbEJveFNlbGVjdCcpIGNoYW5nZVRvb2xCb3hTZWxlY3QhOiAocGF5bG9hZDogSWNoYW5nZVRvb2xCb3hTZWxlY3QpID0+IHZvaWQKICBAUmVmKCdpY29ucycpIGljb25zOiBIVE1MRGl2RWxlbWVudFtdCgogIHRvb2xCb3g6IEFycmF5PElUb29sYm94PiA9IHRvb2xCb3g7CiAgekluZGV4Q2hhbmdlOiBudW1iZXIgPSAwOwogIG1vdW50ZWQgKCkgewogICAgLy8gdGhpcy5zZWxlY3RlZENvbnRyb2wodG9vbEJveFswXS5uYW1lKQogICAgdGhpcy5jaGFuZ2VUb29sQm94U2VsZWN0KHRvb2xCb3hbMF0ubmFtZSkKICB9CgogIGNsaWNrSWNvbiAodmFsdWU6IHN0cmluZykgewogICAgdGhpcy5jaGFuZ2VUb29sQm94U2VsZWN0KHZhbHVlKQogIH0KCiAgQFdhdGNoKCd0b29sQm94U2VsZWN0JykKICBzZWxlY3RlZENvbnRyb2wgKHZhbHVlOiBzdHJpbmcpIHsKICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCB0aGlzLmljb25zLmxlbmd0aDsgaW5kZXgrKykgewogICAgICBjb25zdCBlbGVtZW50OiBIVE1MRGl2RWxlbWVudCA9IHRoaXMuaWNvbnNbaW5kZXhdCiAgICAgIGlmICh2YWx1ZS5pbmNsdWRlcyhlbGVtZW50LmlkKSkgewogICAgICAgIGVsZW1lbnQuc3R5bGUuYm9yZGVyUmlnaHQgPSAnMnB4IHNvbGlkIHdoaXRlJwogICAgICAgIGVsZW1lbnQuc3R5bGUuYm9yZGVyQm90dG9tID0gJzJweCBzb2xpZCB3aGl0ZScKICAgICAgICBlbGVtZW50LnN0eWxlLmJvcmRlcldpZHRoID0gJzJweCcKICAgICAgICBlbGVtZW50LnN0eWxlLmJvcmRlclN0eWxlID0gJ2luc2V0JwogICAgICB9IGVsc2UgewogICAgICAgIGVsZW1lbnQuc3R5bGUuYm9yZGVyU3R5bGUgPSAnJwogICAgICB9CiAgICB9CiAgfQogIGdldCBvdXRlclRvb2xib3hEaXZTdHlsZU9iaiAoKSB7CiAgICByZXR1cm4geyB6SW5kZXg6IHRoaXMuekluZGV4Q2hhbmdlIH0KICB9Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/FormDesigner/components/organisms/FDToolBox","sourcesContent":["<template>\n  <div>\n    <div class=\"outer-toolbox-div\" :style=\"outerToolboxDivStyleObj\">\n      <div class=\"toolbox-header\">\n        <div>\n          <span class=\"spanClass\">ToolBox</span>\n        </div>\n        <div>\n          <span class=\"closeButton\">\n            <img\n              class=\"close\"\n              src=\"https://img.icons8.com/fluent/48/000000/close-window.png\"\n            />\n          </span>\n        </div>\n      </div>\n      <div class=\"toolbox-body\">\n        <div>\n          <Button class=\"toolbox-tab\">Controls</Button>\n        </div>\n        <div class=\"toolbox-icons\">\n          <div\n            v-for=\"(value, i) in toolBox\"\n            :key=\"i\"\n            :title=\"value.name\"\n            class=\"container\"\n            @click=\"clickIcon(value.name)\"\n            :id=\"value.name\"\n            ref=\"icons\"\n          >\n            <UseSvgImage :name=\"value.icon\" />\n            <div class=\"overlay\">\n              <div class=\"text\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { toolBox } from '../../../models/toolBox'\nimport { Component, Vue, Prop, Watch, Ref } from 'vue-property-decorator'\nimport { State, Action } from 'vuex-class'\nimport UseSvgImage from '../../atoms/FDSVGImage/index.vue'\nimport { IchangeToolBoxSelect } from '../../../../storeModules/fd/actions'\nimport { Payload } from 'vuex'\ninterface IToolbox {\n  name: string;\n  icon: string;\n}\ninterface IRef {\n  [icons: string]: [];\n}\ninterface Istyle {\n  id: string;\n  style: {\n    borderRight: string;\n    borderBottom: string;\n    borderWidth: string;\n    borderStyle: string;\n  };\n}\n@Component({\n  name: 'ToolBox',\n  components: {\n    UseSvgImage\n  }\n})\nexport default class ToolBox extends Vue {\n  @State((state:rootState) => state.fd.toolBoxSelect) toolBoxSelect!: fdState['toolBoxSelect']\n  @Action('fd/changeToolBoxSelect') changeToolBoxSelect!: (payload: IchangeToolBoxSelect) => void\n  @Ref('icons') icons: HTMLDivElement[]\n\n  toolBox: Array<IToolbox> = toolBox;\n  zIndexChange: number = 0;\n  mounted () {\n    // this.selectedControl(toolBox[0].name)\n    this.changeToolBoxSelect(toolBox[0].name)\n  }\n\n  clickIcon (value: string) {\n    this.changeToolBoxSelect(value)\n  }\n\n  @Watch('toolBoxSelect')\n  selectedControl (value: string) {\n    for (let index = 0; index < this.icons.length; index++) {\n      const element: HTMLDivElement = this.icons[index]\n      if (value.includes(element.id)) {\n        element.style.borderRight = '2px solid white'\n        element.style.borderBottom = '2px solid white'\n        element.style.borderWidth = '2px'\n        element.style.borderStyle = 'inset'\n      } else {\n        element.style.borderStyle = ''\n      }\n    }\n  }\n  get outerToolboxDivStyleObj () {\n    return { zIndex: this.zIndexChange }\n  }\n}\n</script>\n\n<style scoped>\n.outer-toolbox-div {\n  border: 0.1px solid gray;\n  background-color: rgb(238, 238, 238);\n  min-height: 26px;\n  box-shadow: 2px 2px lightgrey;\n  height: 540px;\n  min-width: 26px;\n  width: 100%;\n  position: relative;\n  left: 0px;\n  top: 0px;\n}\n.toolbox-header {\n  display: grid;\n  grid-template-columns: 90% 10%;\n  height: 26px;\n  width: 100%;\n  background-color: white;\n  padding-top: 3px;\n}\n.toolbox-body {\n  position: absolute;\n  background-color: rgb(238, 238, 238);\n  width: 100%;\n  bottom: 34px;\n  top: 29px;\n}\n.toolbox-tab {\n  padding-bottom: 4px;\n  border-color: gray;\n  box-shadow: 1px 0px grey;\n  border-bottom-width: 0px;\n  border-top-color: white;\n  border-left-color: white;\n  border-top-width: 0.3px;\n  border-left-width: 0.3px;\n  border-right-width: 0.1px;\n  margin-left: 5px;\n  margin-top: 6px;\n}\n.toolbox-icon-border {\n  margin: 4px;\n  margin-top: 0px;\n  border-top: 1px solid white;\n  border-left: 1px solid white;\n  box-shadow: 1px 1px grey;\n  height: auto;\n}\n.toolbox-icons {\n  position: relative;\n  display: grid;\n  overflow: auto;\n  grid-template-columns: repeat(auto-fill, minmax(24px, auto));\n  grid-auto-rows: minmax(min-content, max-content);\n  margin: 4px;\n  margin-top: 0px;\n  border-top: 1px solid white;\n  border-left: 1px solid white;\n  box-shadow: 1px 1px grey;\n  height: 100%;\n}\n.toolbox-icon {\n  width: 24px;\n  height: 24px;\n}\n.container {\n  position: relative;\n  width: 18px;\n  margin: 7px;\n}\n.image {\n  display: block;\n  width: 17px;\n  height: 17px;\n}\n\n.overlay {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 18px;\n  width: 18px;\n  opacity: 0;\n  transition: 0.5s ease;\n}\n.container:hover .overlay {\n  opacity: 0.5;\n}\n\n.text {\n  color: white;\n  font-size: 20px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  -webkit-transform: translate(-50%, -50%);\n  -ms-transform: translate(-50%, -50%);\n  transform: translate(-50%, -50%);\n  text-align: center;\n}\n.close {\n  height: 26px;\n}\n.closeButton {\n  position: relative;\n  right: 0px;\n  float: right;\n  cursor: pointer;\n}\n.spanClass {\n  margin-left: 5px;\n}\n</style>\n"]}]}