{"remainingRequest":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mobiotics/Projects/hancom/formcontrols/src/FormDesigner/components/organisms/FDPropertyList/index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/mobiotics/Projects/hancom/formcontrols/src/FormDesigner/components/organisms/FDPropertyList/index.vue","mtime":1610544258558},{"path":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/FormDesigner/components/organisms/FDPropertyList","sourcesContent":["<template>\n  <div v-if=\"isTableVisible===false\">\n    <div>\n      <div class=\"sideheader\">\n        <span class=\"sideheader1\">\n          <span>Properties - {{displayName ? userformData[userFormId][getSelectedControlsDatas[0]].properties.Name : userformData[userFormId][userFormId].properties.Name }}</span>\n          <div id=\"mdiv\" v-on:click=\"hideShowTable\">\n            <div class=\"mdiv\">\n              <div class=\"md\"></div>\n            </div>\n          </div>\n        </span>\n      </div>\n    </div>\n    <div class=\"form-group\">\n       <select\n        class=\"form-control\"\n        name=\"selectedUserForm\"\n        id=\"selectedUserForm\"\n        ref=\"selectedUserForm\"\n        v-if=\"userFormId\"\n        v-model=\"selected\"\n        @change=\"updateSelected($event)\"\n      >\n        <option\n          :value=\"userFormId\"\n        >{{displayName ? containerData.properties.Name + ' '+ containerData.type : ''}}</option>\n        <template v-if=\"displayName\">\n         <option  v-for=\"control in containerDataControl\" :value=\"control\" :key=\"userData[control].properties.Name\">\n          <b>{{displayName ?  userData[control].properties.Name + ' ' + userData[control].type : ''}}</b>\n        </option>\n        </template>\n      </select>\n\n    </div>\n    <FDTable v-if=\"selectedSelect.length > 0\" :tableData=\"propertyTableData\"\n      :userFormId=\"userFormId\"\n      :getSelectedControlsDatas=\"getSelectedControlsDatas\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Prop, Ref, Vue, Watch } from 'vue-property-decorator'\nimport { Action, State } from 'vuex-class'\nimport FDTable from '@/FormDesigner/components/organisms/FDTable/index.vue'\nimport { PropertyListDefine } from '@/FormDesigner/models/ControlsTableProperties/propertyList'\nimport { IselectControl } from '@/storeModules/fd/actions'\nimport FDCommonMethod from '@/api/abstract/FormDesigner/FDCommonMethod'\nimport { EventBus } from '@/FormDesigner/event-bus'\n\n@Component({\n  name: 'PropertiesList',\n  components: {\n    FDTable\n  }\n})\nexport default class PropertiesList extends FDCommonMethod {\n  @State(state => state.fd.userformData) userformData!: userformData\n  @State((state) => state.fd.selectedControls) selectedControls!: fdState['selectedControls'];\n  @Prop({ required: true, type: String }) public readonly userFormId! : string\n  @Action('fd/selectControl') selectControl!: (payload: IselectControl) => void;\n\n  propList = new PropertyListDefine();\n  selected: string | number | font | null | undefined = null\n\n  isTableVisible = false;\n  hideShowTable () {\n    this.isTableVisible = true\n  }\n\n  selectedOption: Object= {}\n\n  selectOption () {\n    if (this.displayName) {\n      this.selected = this.selectedSelect[0]\n    }\n  }\n  get getSelectedControlsDatas () {\n    if (this.selectedSelect.length > 0 && this.selectedContainer.length > 0) {\n      if (this.selectedControls[this.userFormId].selected.length === 1 && !this.selectedControls[this.userFormId].selected[0].startsWith('group')) {\n        return this.selectedControls[this.userFormId].selected\n      } else {\n        const filteredSelectedControls = []\n        const controls = this.userformData[this.userFormId][this.selectedControls[this.userFormId].container[0]].controls\n        const selControls = this.selectedControls[this.userFormId].selected\n        for (let i = 0; i < selControls.length; i++) {\n          if (selControls[i].startsWith('group')) {\n            for (let j = 0; j < controls.length; j++) {\n              if (this.userformData[this.userFormId][controls[j]].properties.GroupID === selControls[i]) {\n                filteredSelectedControls.push(controls[j])\n              }\n            }\n          } else {\n            filteredSelectedControls.push(selControls[i])\n          }\n        }\n        return filteredSelectedControls\n      }\n    }\n  }\n\n  get propertyTableData () {\n    let result : tableDatas = {}\n    if (this.selectedSelect.length > 0 && this.selectedContainer.length > 0) {\n      if (this.getSelectedControlsDatas!.length === 1) {\n        const controlData: controlData = this.userformData[this.userFormId][this.getSelectedControlsDatas![0]]\n        result = this.updateResult(controlData.properties)\n      } else if (this.getSelectedControlsDatas!.length > 1) {\n        let ctrlKeys = []\n        const uniqueKey = ['Name', 'TabIndex', 'Index', 'MouseIcon', 'Picture', 'Cancel', 'Default', 'Value', 'Style']\n        const combinedObj: ICommonProp = {}\n        const commonPropValue: ICommonPropVal = {}\n\n        // get array of Object which property Object of selected Controls\n        for (const controlIndex in this.getSelectedControlsDatas!) {\n          const controlData = this.userformData[this.userFormId][this.getSelectedControlsDatas![controlIndex]]\n          const defineList = this.propList.data[controlData.type]\n          ctrlKeys.push(Object.keys(defineList))\n        }\n        // get the array which include common key of selected controls\n        let commonProp = ctrlKeys.reduce((a, b) => a.filter((c: string) => b.includes(c)))\n\n        // excluding the Unique key\n        commonProp = commonProp.filter((x: string) => !uniqueKey.includes(x))\n\n        // Generating the Object of common key : value pair and Intializing value as null\n        for (const propName in commonProp) {\n          Vue.set(combinedObj, commonProp[propName], '')\n        }\n\n        // get the Object which include common key:[value] pair of selected control\n        for (const key of this.getSelectedControlsDatas!) {\n          const contolProp: controlProperties = this.userformData[this.userFormId][key].properties\n          for (const propName in contolProp) {\n            if (commonProp.indexOf(propName) > -1) {\n              combinedObj[propName] = [...combinedObj[propName], contolProp[propName as keyof controlProperties]]\n            }\n          }\n        }\n        const allEqual = (arr: string[]): boolean => { return arr.every((v: string) => v === arr[0]) }\n\n        // get the common value\n        for (const propName in combinedObj) {\n          const isSame: boolean = allEqual(combinedObj[propName])\n          commonPropValue[propName] = isSame ? combinedObj[propName][0] : ''\n        }\n\n        const controlData: controlData = this.userformData[this.userFormId][this.getSelectedControlsDatas![0]]\n        const defineList = this.propList.data[controlData.type]\n        result = this.updateResult(commonPropValue)\n      }\n      return result\n    }\n  }\n  updateResult (commonPropValue: ICommonPropVal|controlProperties) {\n    const result : tableDatas = {}\n    const controlData: controlData = this.userformData[this.userFormId][this.getSelectedControlsDatas![0]]\n    const defineList = this.propList.data[controlData.type]\n    for (const propName in defineList) {\n      const propValue = commonPropValue[propName as keyof controlProperties]\n      if (propValue !== undefined) {\n        result[propName] = {\n          ...defineList[propName],\n          value: propValue\n        }\n      }\n    }\n    return result\n  }\n  updateSelected (e: MouseEvent) {\n    if (e.target instanceof HTMLSelectElement) {\n      if (e.target.options.selectedIndex > -1) {\n        const controlName = e.target.options[e.target.options.selectedIndex].text.split(' ')[0]\n        const controlsArray = this.userformData[this.userFormId][this.selectedContainer[0]].controls\n        const value = Object.keys(this.userformData[this.userFormId]).filter(val => {\n          return this.userformData[this.userFormId][val].properties.Name === controlName\n        })\n        this.selectControl({\n          userFormId: this.userFormId,\n          select: {\n            container: this.getContainerList(value[0]),\n            selected: [value[0]]\n          }\n        })\n      }\n    }\n  }\n  get selectedSelect () {\n    return this.selectedControls[this.userFormId].selected\n  }\n  get selectedContainer () {\n    return this.selectedControls[this.userFormId].container\n  }\n  get containerData () {\n    const type = this.userData[this.selectedContainer[0]].type\n    return type === 'Page' ? this.userData[this.selectedContainer[1]] : this.userData[this.selectedContainer[0]]\n  }\n  get containerDataControl () {\n    const type = this.userData[this.selectedContainer[0]].type\n    return type === 'Page' ? this.getChildControl(this.selectedContainer[1]) : this.userData[this.selectedContainer[0]].controls\n  }\n  get userData () {\n    return this.userformData[this.userFormId]\n  }\n  get displayName () {\n    return this.selectedSelect.length === 1 && !this.selectedSelect[0].startsWith('group')\n  }\n  @Watch('selectedControls', { deep: true })\n  updateOption () {\n    this.selectOption()\n  }\n  created () {\n    EventBus.$on('dispProp', (val: boolean) => {\n      this.isTableVisible = val\n    })\n  }\n  destroyed () {\n    EventBus.$off('dispProp')\n  }\n}\n</script>\n\n<style scoped>\n.sideheader1 {\n   display: grid;\n  grid-template-columns: 1fr 25px;\n  background-color: rgb(142, 191, 231);\n  margin-bottom: 8px;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n}\n.sideheader {\n  height: 22px;\n  text-align: left;\n  padding: 0pc;\n  background-color: #99b4d1;\n}\n.form-control {\n  float: left;\n  width: 100%;\n  cursor: pointer;\n  background-color: white;\n}\n#mdiv {\n  float: right;\n  margin: initial;\n  position: relative;\n  top: 0px;\n  width: 20px;\n  height: 16px;\n  background-color: lightgray;\n  border: outset;\n}\n\n.mdiv {\n  height: 17px;\n  width: 2px;\n  margin-left: 60px;\n  background-color: black;\n  transform: rotate(45deg);\n  z-index: 1;\n  position: absolute;\n  right: 8px;\n}\n\n.md {\n  height: 17px;\n  width: 2px;\n  background-color: black;\n  transform: rotate(90deg);\n  z-index: 2;\n  position: absolute;\n  right: 0px;\n}\n</style>\n"]}]}