{"remainingRequest":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mobiotics/Projects/hancom/formcontrols/src/FormDesigner/components/atoms/FDMultiPage/index.vue?vue&type=style&index=0&id=032be1c4&scoped=true&lang=css&","dependencies":[{"path":"/home/mobiotics/Projects/hancom/formcontrols/src/FormDesigner/components/atoms/FDMultiPage/index.vue","mtime":1610544258554},{"path":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm91dGVyLXBhZ2UgewogIGJhY2tncm91bmQtY29sb3I6IHJnYigyMzgsIDIzOCwgMjM4KTsKICBvdmVyZmxvdy15OiBoaWRkZW47CiAgb3ZlcmZsb3cteDogaGlkZGVuOwogIGJveC1zaXppbmc6IGJvcmRlci1ib3g7CiAgd2lkdGg6IDBweDsKICBoZWlnaHQ6IDBweDsKICBsZWZ0OiAwcHg7CiAgdG9wOiAwcHg7CiAgY3Vyc29yOiBkZWZhdWx0OwogIHBvc2l0aW9uOiBzdGlja3k7Cn0KLnBhZ2VzIHsKICAvKiBkaXNwbGF5OiBncmlkOyAqLwogIG1hcmdpbjogMDsKICAvKiB3aWR0aDogY2FsYygxMDAlKTsKICBoZWlnaHQ6IGNhbGMoMTAwJSk7ICovCiAgd2hpdGUtc3BhY2U6IG5vd3JhcDsKICBvdmVyZmxvdy14OiBoaWRkZW47CiAgb3ZlcmZsb3cteTogaGlkZGVuOwp9Ci5sZWZ0LWJ1dHRvbiB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIG91dGxpbmU6IG5vbmU7CiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCIuLi8uLi8uLi8uLi9hc3NldHMvbGVmdC1hcnJvdy1pbWcucG5nIik7CiAgYmFja2dyb3VuZC1zaXplOiAzMCU7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyOwogIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7CiAgYm9yZGVyOiAycHggc29saWQgd2hpdGU7CiAgYm9yZGVyLXJpZ2h0LWNvbG9yOiBncmF5OwogIGJvcmRlci1ib3R0b20tY29sb3I6IGdyYXk7CiAgdG9wOiAzcHg7CiAgcmlnaHQ6IDE1cHg7CiAgd2lkdGg6IDIycHg7CiAgaGVpZ2h0OiAxOHB4OwogIHBhZGRpbmc6IDA7CiAgbWFyZ2luOiAwOwogIG92ZXJmbG93OiBoaWRkZW47CiAgei1pbmRleDogNTsKfQoucmlnaHQtYnV0dG9uIHsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgb3V0bGluZTogbm9uZTsKICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoIi4uLy4uLy4uLy4uL2Fzc2V0cy9yaWdodC1hcnJvdy1pbWcucG5nIik7CiAgYmFja2dyb3VuZC1zaXplOiAzMCU7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyOwogIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7CiAgYm9yZGVyOiAycHggc29saWQgd2hpdGU7CiAgYm9yZGVyLXJpZ2h0LWNvbG9yOiBncmF5OwogIGJvcmRlci1ib3R0b20tY29sb3I6IGdyYXk7CiAgdG9wOiAzcHg7CiAgcmlnaHQ6IDE1cHg7CiAgd2lkdGg6IDIycHg7CiAgaGVpZ2h0OiAxOHB4OwogIHBhZGRpbmc6IDA7CiAgbWFyZ2luOiAwOwogIG92ZXJmbG93OiBoaWRkZW47CiAgei1pbmRleDogNTsKfQoubW92ZSB7CiAgZGlzcGxheTogZ3JpZDsKfQoucGFnZSB7CiAgdmVydGljYWwtYWxpZ246IHRvcDsKICB6LWluZGV4OiAxOwogIG92ZXJmbG93OiBoaWRkZW47Cn0KLnNjcm9sbC1wYWdlIHsKICB6LWluZGV4OiAyOwp9Ci5wYWdlIGxhYmVsIHsKICBib3JkZXI6IDAuMXB4IHNvbGlkIHdoaXRlOwogIGJhY2tncm91bmQtY29sb3I6IHJnYigyMzgsIDIzOCwgMjM4KTsKICAvKiBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7ICovCiAgcGFkZGluZzogNXB4IDVweCA1cHggNXB4OwogIG1hcmdpbjogMDsKICBjdXJzb3I6IHBvaW50ZXI7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIHRvcDogMHB4Owp9Ci5wYWdlIFt0eXBlPSJyYWRpbyJdIHsKICBkaXNwbGF5OiBub25lOwp9Cjo6LXdlYmtpdC1zY3JvbGxiYXIubW92ZSB7CiAgZGlzcGxheTogbm9uZTsKICB3aWR0aDogMDsKICBoZWlnaHQ6IDFlbTsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjM4LCAyMzgsIDIzOCk7Cn0KOjotd2Via2l0LXNjcm9sbGJhci5jb250ZW50IHsKICB3aWR0aDogMDsKICBoZWlnaHQ6IDFlbTsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjM4LCAyMzgsIDIzOCk7Cn0KCjo6LXdlYmtpdC1zY3JvbGxiYXItYnV0dG9uIHsKICBiYWNrZ3JvdW5kOiByZ2IoMjM4LCAyMzgsIDIzOCk7CiAgaGVpZ2h0OiAyMHB4OwogIGJvcmRlcjogMXB4IHNvbGlkIGxpZ2h0Z3JheTsKICBib3JkZXItcmlnaHQtY29sb3I6IGdyYXk7CiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogZ3JheTsKfQoKLyogVXAgKi8KOjotd2Via2l0LXNjcm9sbGJhci1idXR0b246c2luZ2xlLWJ1dHRvbjpob3Jpem9udGFsOmRlY3JlbWVudCB7CiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCIuLi8uLi8uLi8uLi9hc3NldHMvdHJpYW5nbGUtdXAtaW1nLnBuZyIpOwogIHRyYW5zZm9ybTogcm90YXRlKDkwZGVnKTsKICBiYWNrZ3JvdW5kLXNpemU6IDEwcHg7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyOwogIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7CiAgLyogYm9yZGVyLWNvbG9yOiBsaWdodGdyZXk7ICovCn0KCi8qIERvd24gKi8KOjotd2Via2l0LXNjcm9sbGJhci1idXR0b246c2luZ2xlLWJ1dHRvbjpob3Jpem9udGFsOmluY3JlbWVudCB7CiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCIuLi8uLi8uLi8uLi9hc3NldHMvdHJpYW5nbGUtZG93bi1pbWcucG5nIik7CiAgYmFja2dyb3VuZC1zaXplOiAxMHB4OwogIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjsKICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0OwogIC8qIGJvcmRlci1jb2xvcjogbGlnaHRncmV5OyAqLwp9Cgo6Oi13ZWJraXQtc2Nyb2xsYmFyLXRyYWNrLXBpZWNlIHsKICB3aWR0aDogMHB4Owp9Cgo6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJrZ3JleTsKICBvdXRsaW5lOiAxcHggc29saWQgc2xhdGVncmV5OwogIGhlaWdodDogNXB4Owp9CgoucGFnZSAuY29udGVudCB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHdoaXRlLXNwYWNlOiBub3JtYWw7CiAgdG9wOiAyM3B4OwogIGxlZnQ6IDBweDsKICAvKiBiYWNrZ3JvdW5kOiByZ2IoMjM4LCAyMzgsIDIzOCk7ICovCiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7CiAgYmFja2dyb3VuZC1zaXplOiA5cHggMTBweDsKICBiYWNrZ3JvdW5kLWltYWdlOiByYWRpYWwtZ3JhZGllbnQoCiAgICBjaXJjbGUsCiAgICByZ2IoMCwgMCwgMCkgMC41cHgsCiAgICByZ2JhKDAsIDAsIDAsIDApIDAuMnB4CiAgKTsKICBoZWlnaHQ6IDEwMHB4OwogIHJpZ2h0OiAwOwogIGJvdHRvbTogMDsKICBwYWRkaW5nOiAyMHB4OwogIHBhZGRpbmctcmlnaHQ6IDEwcHg7CiAgd2lkdGg6IGNhbGMoMTAwJSAtIDM1cHgpOwogIGhlaWdodDogY2FsYygxMDAlIC0gODlweCk7CiAgYm9yZGVyOiAwLjFweCBzb2xpZCB3aGl0ZTsKICBib3gtc2hhZG93OiAycHggMXB4IGdyYXk7Cn0KCi5wYWdlIFt0eXBlPSJyYWRpbyJdOmNoZWNrZWQgfiBsYWJlbCB+IC5jb250ZW50IHsKICB6LWluZGV4OiAxOwp9Ci5jb250ZW50IHsKICBvdmVyZmxvdzogYXV0bzsKfQojcmlnaHQtY2xpY2stbWVudSB7CiAgYmFja2dyb3VuZDogI2ZhZmFmYTsKICBib3JkZXI6IDFweCBzb2xpZCAjYmRiZGJkOwogIGJveC1zaGFkb3c6IDAgMnB4IDJweCAwIHJnYmEoMCwgMCwgMCwgMC4xNCksIDAgM3B4IDFweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4yKSwKICAgIDAgMXB4IDVweCAwIHJnYmEoMCwgMCwgMCwgMC4xMik7CiAgZGlzcGxheTogYmxvY2s7CiAgbGlzdC1zdHlsZTogbm9uZTsKICBtYXJnaW46IDA7CiAgcGFkZGluZzogMDsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgd2lkdGg6IDEwMHB4OwogIHotaW5kZXg6IDk5OTk5OTsKfQoKI3JpZ2h0LWNsaWNrLW1lbnUgbGkgewogIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZTBlMGUwOwogIG1hcmdpbjogMDsKICBwYWRkaW5nOiA1cHggNXB4Owp9CgojcmlnaHQtY2xpY2stbWVudSBsaTpsYXN0LWNoaWxkIHsKICBib3JkZXItYm90dG9tOiBub25lOwp9CgojcmlnaHQtY2xpY2stbWVudSBsaTpob3ZlciB7CiAgYmFja2dyb3VuZDogIzFlODhlNTsKICBjb2xvcjogI2ZhZmFmYTsKfQoKLnNwYW5DbGFzcyB7CiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7CiAgdGV4dC11bmRlcmxpbmUtcG9zaXRpb246IHVuZGVyOwp9Cjpmb2N1cyB7CiAgb3V0bGluZTogbm9uZTsKfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappingsifile":"index.vue","sourceRoot":"src/FormDesigner/components/atoms/FDMultiPage","sourcesContent":["<template>\n  <div>\n    <div\n      class=\"outer-page\"\n      :style=\"pageStyleObj\"\n      :title=\"properties.ControlTipText\"\n      @mousedown=\"multiPageMouseDown\"\n      @click.stop=\"\n        !isEditMode ? selectedItem : addControlObj($event, selectedPageID)\n      \"\n      @mouseup=\"dragSelectorControl($event)\"\n      @contextmenu.stop=\"handleContextMenu\"\n      @keydown.delete.stop.exact=\"deleteMultiPage\"\n      @keyup.stop=\"selectMultipleCtrl($event, false)\"\n      :tabindex=\"properties.TabIndex\"\n    >\n      <div\n        class=\"pages\"\n        :style=\"styleTabsObj\"\n        :title=\"properties.ControlTipText\"\n        v-if=\"controls.length > 0\"\n      >\n        <div class=\"move\" ref=\"scrolling\" :style=\"styleMoveObj\">\n          <div\n            ref=\"controlTabsRef\"\n            class=\"page\"\n            v-for=\"(value, key) in controls\"\n            :key=\"key\"\n            :style=\"getTabStyle\"\n          >\n            <FDControlTabs\n              @setValue=\"setValue\"\n              @isChecked=\"isChecked\"\n              :setFontStyle=\"setFontStyle\"\n              @tempStretch=\"tempStretch\"\n              @deleteMultiPageControl=\"\n                (event) => {\n                  deleteMultiPageControl(event);\n                }\n              \"\n              :data=\"data\"\n              :pageValue=\"value\"\n              :indexValue=\"key\"\n              :pageData=\"pageData(value).properties\"\n              :isRunMode=\"isRunMode\"\n              :isEditMode=\"isEditMode\"\n              :isItalic=\"isItalic\"\n              :tempStretch=\"tempStretch\"\n              :tempWeight=\"tempWeight\"\n              :tempWidth=\"tempWidth\"\n              ref=\"controlTab\"\n            />\n          </div>\n        </div>\n        <div\n          class=\"content\"\n          :style=\"styleContentObj\"\n          ref=\"contentRef\"\n          :title=\"properties.ControlTipText\"\n          @scroll=\"updateScrollingLeftTop\"\n        >\n          <div\n            v-if=\"controls.includes(selectedPageID)\"\n            :style=\"containerDivStyle\"\n            :title=\"properties.ControlTipText\"\n            :tabindex=\"properties.TabIndex\"\n            @keydown.delete.exact=\"deleteMultiPageControl\"\n            @keydown.ctrl.exact.stop=\"selectMultipleCtrl($event, true)\"\n            @keydown.ctrl.stop=\"handleKeyDown\"\n            @keydown.enter.exact=\"setContentEditable($event, true)\"\n            @keydown.shift.exact.stop=\"selectMultipleCtrl($event, true)\"\n            @contextmenu.stop=\"\n              showContextMenu($event, userFormId, controlId, 'container', isEditMode)\n            \"\n          >\n            <Container\n              :contextMenuType=\"contextMenuType\"\n              :viewMenu=\"viewMenu\"\n              :userFormId=\"userFormId\"\n              :controlId=\"selectedPageID\"\n              :containerId=\"selectedPageID\"\n              :isEditMode=\"isEditMode\"\n              :title=\"properties.ControlTipText\"\n              :left=\"left\"\n              :top=\"top\"\n              :width=\"properties.Width\"\n              :height=\"properties.Height\"\n              ref=\"containerRef\"\n              @closeMenu=\"closeMenu\"\n              @openMenu=\"\n                (e, parentID, controlID, type, mode) =>\n                  showContextMenu(e, parentID, controlID, type, mode)\n              \"\n            />\n          </div>\n        </div>\n        <div></div>\n        <div :style=\"getScrollButtonStyleObj\">\n          <button class=\"left-button\" @click=\"leftmove\"></button>\n          <button class=\"right-button\" @click=\"rightmove\"></button>\n        </div>\n      </div>\n    </div>\n    <div\n      id=\"right-click-menu\"\n      ref=\"multipage\"\n      :tabindex=\"0\"\n      @blur.stop=\"closeContextMenu\"\n      :style=\"{\n        top: top,\n        left: left,\n        display: multiPageContextMenu ? 'block' : 'none',\n      }\"\n    >\n      <ContextMenu\n        :values=\"contextMenuValue\"\n        :controlId=\"controlId\"\n        :selectedTab=\"updatedValue\"\n        :data=\"data\"\n        :userFormId=\"userFormId\"\n      />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Prop, Ref, Watch } from 'vue-property-decorator'\nimport FdControlVue from '@/api/abstract/FormDesigner/FdControlVue'\nimport { State, Action } from 'vuex-class'\nimport FdContainerVue from '@/api/abstract/FormDesigner/FdContainerVue'\nimport { controlProperties } from '@/FormDesigner/controls-properties'\nimport ContextMenu from '../FDContextMenu/index.vue'\nimport { tabsContextMenu } from '../../../models/tabsContextMenu'\nimport Vue from 'vue'\nimport {\n  KeyValueProp,\n  ScrollBarProp\n} from '@/FormDesigner/controls-properties-types'\nimport FDControlTabs from '@/FormDesigner/components/atoms/FDControlTabs/index.vue'\nimport Container from '@/FormDesigner/components/organisms/FDContainer/index.vue'\nimport { EventBus } from '@/FormDesigner/event-bus'\n\n@Component({\n  name: 'FDMultiPage',\n  components: {\n    ContextMenu,\n    FDControlTabs,\n    Container: () =>\n      import('@/FormDesigner/components/organisms/FDContainer/index.vue')\n  }\n})\nexport default class FDMultiPage extends FdContainerVue {\n  @State((state) => state.fd.userformData) userformData!: userformData;\n  @Prop() isEditMode: boolean;\n  @Prop({ required: true, type: String }) public userFormId!: string;\n  @Ref('scrolling') scrolling: HTMLDivElement;\n  @Ref('contentRef') contentRef: HTMLDivElement;\n  @Ref('containerRef') readonly containerRef!: Container;\n  @Ref('multipage') multipage: HTMLDivElement;\n  @Ref('controlTabsRef') controlTabsRef: HTMLDivElement[];\n  @Ref('controlTab') controlTab: FDControlTabs[];\n\n  viewMenu: boolean = false;\n  top: string = '0px';\n  left: string = '0px';\n  contextMenuValue: Array<IcontextMenu> = tabsContextMenu;\n  updatedValue: number = 0;\n  selectedPageID: string = '';\n  multiPageContextMenu: boolean = false;\n  tempWidth: number = 0;\n  tempHeight: number = 0;\n  multiRowCount: number = 1;\n  isScrollVisible = false;\n\n  closeMenu () {\n    this.viewMenu = false\n  }\n\n  @Watch('selectedPageData.properties.ScrollLeft')\n  updateScrollLeft () {\n    if (this.selectedPageData) {\n      this.scrollLeftTop(this.selectedPageData!)\n    }\n  }\n\n  @Watch('selectedPageData.properties.ScrollTop')\n  updateScrollTop () {\n    if (this.selectedPageData) {\n      this.scrollLeftTop(this.selectedPageData!)\n    }\n  }\n  /**\n   * @description sets scrollbar left and top position\n   * @function scrollLeftTop\n   * @param controlData propControlData passed as input\n   */\n  scrollLeftTop (controlData: controlData) {\n    if (this.selectedPageData) {\n      const scrollLeft: number = controlData!.properties.ScrollLeft!\n      const scrollTop: number = controlData!.properties.ScrollTop!\n      console.log(this.$refs)\n      if (scrollLeft > 0) {\n        (this.contentRef as IScrollRef).scrollLeft = scrollLeft\n      }\n      if (scrollTop > 0) {\n        (this.contentRef as IScrollRef).scrollTop = scrollTop\n      }\n    }\n  }\n  focusPage () {\n    if (typeof this.properties.Value === 'number' && this.controls.length > 0) {\n      const value: number = this.properties.Value as number;\n      (this.controlTab[value].$el.children[1] as HTMLSpanElement).focus()\n    } else {\n      (this.$el.children[0] as HTMLDivElement).focus()\n    }\n  }\n  closeContextMenu () {\n    this.multiPageContextMenu = false\n    this.focusPage()\n  }\n  /**\n   * @description takes a single page value based on the value of the control\n   * @function pageData\n   *\n   */\n  pageData (value: string): controlData {\n    return this.userformData[this.userFormId][value]\n  }\n\n  get outerDivStyleObj () {\n    return {\n      width: `${this.properties.Width!}px`,\n      height: `${this.properties.Width!}px`\n    }\n  }\n  /**\n   * @description style object is passed to :style attribute in div tag\n   * dynamically changing the styles of the component based on data\n   * @function pageStyleObj\n   *\n   */\n  get pageStyleObj () {\n    const controlProp = this.properties\n    let display = ''\n    if (this.isRunMode) {\n      display = controlProp.Visible ? 'inline-block' : 'none'\n    } else {\n      display = 'inline-block'\n    }\n    return {\n      left: `${controlProp.Left}px`,\n      width: `${controlProp.Width}px`,\n      height: `${controlProp.Height}px`,\n      top: `${controlProp.Top}px`,\n      backgroundColor: controlProp.BackColor,\n      display: display,\n      borderLeft: '2px solid whitesmoke',\n      borderBottom: controlProp.TabOrientation === 0 ? '1px solid gray' : ''\n    }\n  }\n\n  /**\n   * @description style object is passed to :style attribute in div tag\n   * dynamically changing the styles of the component based on data\n   * @function styleTabsObj\n   *\n   */\n  protected get styleTabsObj (): Partial<CSSStyleDeclaration> {\n    const controlProp = this.properties\n    return {\n      overflow: 'hidden',\n      display: 'flex',\n      justifyContent: controlProp.TabOrientation === 3 ? 'flex-end' : '',\n      height: `${controlProp.Height!}px`\n    }\n  }\n\n  /**\n   * @description style object is passed to :style attribute in div tag\n   * dynamically changing the styles of the component based on data\n   * @function styleMoveObj\n   *\n   */\n  protected get styleMoveObj (): Partial<CSSStyleDeclaration> {\n    const controlProp = this.properties\n    return {\n      alignSelf: controlProp.TabOrientation === 1 ? 'flex-end' : '',\n      float: controlProp.TabOrientation === 3 ? 'right' : '',\n      whiteSpace: controlProp.MultiRow === true ? 'break-spaces' : 'nowrap',\n      zIndex: controlProp.MultiRow === true ? '100' : '',\n      display: controlProp.Style === 2 ? 'none' : 'inline-block',\n      height:\n        controlProp.TabOrientation === 2 || controlProp.TabOrientation === 3\n          ? this.isScrollVisible\n            ? `${controlProp.Height! - 54}px`\n            : `${controlProp.Height}px`\n          : '',\n      width:\n        controlProp.TabOrientation === 2 || controlProp.TabOrientation === 3\n          ? ''\n          : !this.isScrollVisible\n            ? `${controlProp.Width}px`\n            : `${controlProp.Width! - 60}px`,\n      overflow: 'hidden'\n    }\n  }\n\n  /**\n   * @description style object is passed to :style attribute in div tag\n   * dynamically changing the styles of the component based on data\n   * @function containerDivStyle\n   *\n   */\n  get containerDivStyle () {\n    if (this.selectedPageData) {\n      let zoomVal = this.selectedPageData\n        ? this.selectedPageData.properties.Zoom! / 100\n        : ''\n      return {\n        height: '100%',\n        width: '100%',\n        position: 'relative',\n        backgroundImage: `url(${this.selectedPageData.properties.Picture})`,\n        backgroundSize:\n          this.selectedPageData.properties.Picture === ''\n            ? ''\n            : this.getSizeMode,\n        backgroundRepeat: this.getRepeatData,\n        backgroundPosition:\n          this.selectedPageData.properties.Picture === ''\n            ? ''\n            : this.getPosition,\n        zoom: zoomVal + ''\n      }\n    }\n  }\n  /**\n   * @description style object is passed to :style attribute in button tags\n   * dynamically changing the styles of the component based on data\n   * @function getScrollButtonStyleObj\n   *\n   */\n  protected get getScrollButtonStyleObj (): Partial<CSSStyleDeclaration> {\n    const controlProp = this.properties\n    const tabsLength =\n      this.properties.TabFixedWidth! > 0\n        ? this.controls.length * this.properties.TabFixedWidth! +\n          10 * this.controls!.length\n        : this.properties.Font!.FontSize! < 36\n          ? this.properties.Font!.FontSize! * 3.5 * this.controls!.length\n          : this.properties.Font!.FontSize! * 2.3 * this.controls!.length\n    const tabsHeight =\n      this.properties.TabFixedHeight! > 0\n        ? this.controls.length * this.properties.TabFixedHeight! +\n          this.properties.Font!.FontSize! * this.controls!.length\n        : this.properties.Font!.FontSize! * 2.3 * this.controls!.length\n    return {\n      position: 'absolute',\n      zIndex: '3',\n      marginTop:\n        controlProp.TabOrientation === 2 || controlProp.TabOrientation === 3\n          ? `${controlProp.Height! - 30}px`\n          : controlProp.TabOrientation === 1\n            ? `${controlProp.Height! - 22}px`\n            : '0px',\n      transform:\n        controlProp.TabOrientation === 2\n          ? 'rotate(90deg)'\n          : this.transformScrollButtonStyle,\n      display: !this.properties.MultiRow\n        ? this.isScrollVisible\n          ? 'block'\n          : 'none'\n        : 'none',\n      right:\n        controlProp.TabOrientation === 3\n          ? '-14px'\n          : controlProp.TabOrientation === 2\n            ? `${controlProp.Width! - 40}px`\n            : '0px',\n      top: '0px'\n    }\n  }\n\n  scrollButtonVerify () {\n    this.isScrollVisible = false\n    let sum = 0\n    Vue.nextTick(() => {\n      if (\n        this.properties.TabOrientation === 0 ||\n        this.properties.TabOrientation === 1\n      ) {\n        if (this.scrolling && !this.properties.MultiRow) {\n          for (let i = 0; i < this.scrolling.children.length; i++) {\n            const a = this.scrolling.children[i] as HTMLDivElement\n            sum += a.offsetWidth\n          }\n          const tabsLength = sum\n          if (tabsLength > this.properties.Width!) {\n            this.isScrollVisible = true\n          } else {\n            this.isScrollVisible = false\n          }\n        }\n      } else {\n        if (this.scrolling && !this.properties.MultiRow) {\n          for (let i = 0; i < this.scrolling.children.length; i++) {\n            const a = this.scrolling.children[i] as HTMLDivElement\n            sum += a.offsetHeight\n          }\n          const tabsHeight = sum\n          if (tabsHeight > this.properties.Height!) {\n            this.isScrollVisible = true\n          } else {\n            this.isScrollVisible = false\n          }\n        }\n      }\n    })\n  }\n\n  /**\n   * @description takes the index Value and pageValue and set the Value property\n   * @function isChecked\n   *\n   */\n  isChecked (value: selectedTab) {\n    if (this.isEditMode) {\n      this.updatedValue = value.indexValue\n      this.selectedPageID = value.pageValue\n      this.updateDataModel({ propertyName: 'Value', value: value.indexValue })\n      this.selectControl({\n        userFormId: this.userFormId,\n        select: {\n          container: this.getContainerList(this.selectedPageID),\n          selected: [this.selectedPageID]\n        }\n      })\n      this.focusPage()\n    }\n  }\n\n  /**\n   * @description takes the ref of the div and determines the scrollLeft and scrollTop\n   * @function leftmove\n   *\n   */\n  leftmove () {\n    const scrollRef = this.scrolling\n    if (\n      this.properties.TabOrientation === 0 ||\n      this.properties.TabOrientation === 1\n    ) {\n      scrollRef.scrollLeft! -= 50\n    } else {\n      scrollRef.scrollTop! -= 50\n    }\n  }\n\n  /**\n   * @description takes the ref of the div and determines the scrollLeft and scrollTop\n   * @function rightmove\n   *\n   */\n  rightmove () {\n    const scrollRef = this.scrolling\n    let tempScrollTop = scrollRef.scrollTop!\n    if (\n      this.properties.TabOrientation === 0 ||\n      this.properties.TabOrientation === 1\n    ) {\n      scrollRef.scrollLeft! += 50\n    } else {\n      tempScrollTop += 50\n      scrollRef.scrollTop = tempScrollTop\n    }\n  }\n\n  /**\n   * @description takes the index Value and sets the Value property\n   * @function setValue\n   *\n   */\n  setValue (value: number) {\n    this.updatedValue = value\n    this.updateDataModel({ propertyName: 'Value', value: value })\n    return true\n  }\n  /**\n   * @description style object is passed to :style attribute in div tag\n   * dynamically changing the styles of the component based on data\n   * @function getTabStyle\n   *\n   */\n  protected get getTabStyle (): Partial<CSSStyleDeclaration> {\n    const controlProp = this.properties\n    return {\n      display:\n        controlProp.TabOrientation === 0 || controlProp.TabOrientation === 1\n          ? 'inline-block'\n          : 'block',\n      height:\n        controlProp.TabFixedHeight! > 0\n          ? `${controlProp.TabFixedHeight! + 10}px`\n          : ''\n    }\n  }\n\n  /**\n   * @description getRepeat returns string value from\n   * controlProperties.extraDataRepeatProp\n   * @function getRepeat\n   */\n  protected get getRepeatData (): string {\n    if (this.selectedPageData) {\n      const picture = this.selectedPageData.properties.Picture!\n      const pictureTiling = this.selectedPageData.properties.PictureTiling!\n      const pictureSizeMode = this.selectedPageData.properties.PictureSizeMode!\n      return controlProperties.getRepeatDataProp(\n        picture,\n        pictureTiling,\n        pictureSizeMode\n      )\n    } else {\n      return ''\n    }\n  }\n\n  /**\n   * @description style object is passed to :style attribute in div tag\n   * dynamically changing the styles of the component based on data\n   * @function styleContentObj\n   *\n   */\n  protected get styleContentObj (): Partial<CSSStyleDeclaration> {\n    const controlProp = this.properties\n    return {\n      position: 'absolute',\n      display:\n        controlProp.Height! < controlProp.TabFixedHeight!\n          ? 'none'\n          : controlProp.Width! < controlProp.TabFixedWidth!\n            ? 'none'\n            : controlProp.Width! < 30 || controlProp.Height! < 30\n              ? 'none'\n              : 'block',\n      top:\n        controlProp.Style !== 2\n          ? controlProp.TabOrientation === 0\n            ? controlProp.MultiRow\n              ? (this.tempHeight + 12) * this.multiRowCount + 'px'\n              : controlProp.TabFixedHeight! > 0\n                ? controlProp.TabFixedHeight! + 10 + 'px'\n                : controlProp.TabFixedHeight! === 0\n                  ? this.tempHeight + 16 + 'px'\n                  : '33px'\n            : '0px'\n          : '0px',\n      height:\n        controlProp.Style !== 2\n          ? controlProp.TabOrientation === 0 || controlProp.TabOrientation === 1\n            ? controlProp.MultiRow\n              ? controlProp.Height! -\n                (this.tempHeight + 12) * this.multiRowCount +\n                'px'\n              : controlProp.TabFixedHeight! > 0\n                ? controlProp.TabOrientation === 0\n                  ? controlProp.Height! - controlProp.TabFixedHeight! - 10 + 'px'\n                  : controlProp.Height! - controlProp.TabFixedHeight! - 5 + 'px'\n                : controlProp.TabFixedHeight! === 0\n                  ? controlProp.Font!.FontSize! === 72\n                    ? controlProp.Height! - controlProp.Font!.FontSize! - 18 + 'px'\n                    : controlProp.Height! - controlProp.Font!.FontSize! - 16 + 'px'\n                  : controlProp.TabOrientation === 1\n                    ? `${controlProp.Height! - 21}px`\n                    : `${controlProp.Height! - 35}px`\n            : `${controlProp.Height! - 1}px`\n          : `${controlProp.Height! - 1}px`,\n      width:\n        controlProp.Style !== 2\n          ? controlProp.TabOrientation === 0 || controlProp.TabOrientation === 1\n            ? `${controlProp.Width! - 3}px`\n            : controlProp.TabFixedWidth! > 0\n              ? controlProp.Width! - controlProp.TabFixedWidth! - 10 + 'px'\n              : controlProp.TabFixedWidth! === 0\n                ? controlProp.TabOrientation === 2 ||\n              controlProp.TabOrientation === 3\n                  ? `${controlProp.Width! - this.tempWidth - 13}px`\n                  : controlProp.Width! - controlProp.Font!.FontSize! - 20 + 'px'\n                : 'calc(100% - 44px)'\n          : `${controlProp.Width! - 3}px`,\n      left:\n        controlProp.Style !== 2\n          ? controlProp.TabOrientation === 2\n            ? controlProp.TabFixedWidth! > 0\n              ? controlProp.TabFixedWidth! + 12 + 'px'\n              : controlProp.TabFixedWidth! === 0\n                ? controlProp.TabOrientation === 2 ||\n                controlProp.TabOrientation === 3\n                  ? `${this.tempWidth + 12}px`\n                  : controlProp.Font!.FontSize! + 20 + 'px'\n                : '40px'\n            : '0px'\n          : '0px',\n      padding: '0px',\n      overflow: 'hidden',\n      overflowX: this.getScrollBarPage ? this.getScrollBarPage.overflowX! : '',\n      overflowY: this.getScrollBarPage ? this.getScrollBarPage.overflowY! : '',\n      backgroundColor: 'rgb(238,238,238)',\n      backgroundImage:\n        'radial-gradient(circle, rgb(0, 0, 0) 0.5px, rgba(0, 0, 0, 0) 0.2px) !important',\n      backgroundSize: '9px 10px',\n      boxShadow:\n        controlProp.TabOrientation === 0 ? '1px 0px gray' : '1px 1px gray'\n    }\n  }\n\n  /**\n   * @description getPosition returns string value from\n   * controlProperties.picturePositionProp\n   * @function getPosition\n   * @returns string value\n   */\n  protected get getPosition () {\n    if (this.selectedPageData) {\n      const picture = this.selectedPageData.properties.Picture!\n      const pictureAlignment = this.selectedPageData.properties\n        .PictureAlignment!\n      const pictureSizeMode = this.selectedPageData.properties.PictureSizeMode!\n      return controlProperties.getPositionProp(\n        picture,\n        pictureAlignment,\n        pictureSizeMode\n      )\n    } else {\n      return ''\n    }\n  }\n\n  /**\n   * @description getSizeMode returns string value from\n   * controlProperties.pictureSizeModeProp\n   * @function getSizeMode\n   * @returns string value\n   */\n  protected get getSizeMode (): string {\n    if (this.selectedPageData) {\n      const index: number = this.selectedPageData.properties.PictureSizeMode!\n      return controlProperties.getSizeModeProp(index)\n    } else {\n      return ''\n    }\n  }\n\n  /**\n   * @description getScrollBarPage returns propData based on keepScrollBar and scrollBar values\n   * @function getScrollBarPage\n   */\n  get getScrollBarPage () {\n    if (this.selectedPageData) {\n      const keepScrollBar: number = this.selectedPageData.properties\n        .KeepScrollBarsVisible!\n      const scrollBar: number = this.selectedPageData.properties.ScrollBars!\n      return controlProperties.setScrollBarProp(keepScrollBar, scrollBar)\n    } else {\n      return ''\n    }\n  }\n\n  /**\n   * @description returns the selected page\n   * dynamically based on the selectedPageID\n   * @function selectedPageData\n   *\n   */\n  get selectedPageData () {\n    if (this.selectedPageID) {\n      return this.userformData[this.userFormId][this.selectedPageID]\n    } else {\n      return ''\n    }\n  }\n\n  /**\n   * @description watches changes in propControlData to set autoset when true\n   * @function isScrollUsed\n   * @param oldVal previous propControlData data\n   * @param newVal  new/changed propControlData data\n   */\n  @Watch('properties.Width')\n  isScrollUsed (newVal: number, oldVal: number) {\n    if (this.properties.MultiRow) {\n      const initialLength = this.controls.length!\n      const len = (this.tempWidth + 12) * initialLength\n      if (len - this.properties.Width! >= 0) {\n        if (this.multiRowCount <= this.controls.length!) {\n          const a = Math.ceil(len / this.properties.Width!)\n          this.multiRowCount = a\n          if (this.properties.Width! <= (this.tempWidth + 12) * 2) {\n            this.multiRowCount = a + 2\n          }\n        } else if (newVal > oldVal) {\n          this.multiRowCount = this.controls.length!\n          const a = Math.ceil(len / this.properties.Width!)\n          this.multiRowCount = a\n        }\n      } else {\n        this.multiRowCount = 1\n      }\n    } else {\n      this.scrollButtonVerify()\n    }\n  }\n\n  @Watch('properties.TabOrientation')\n  orientValidate () {\n    this.scrollButtonVerify()\n  }\n\n  @Watch('properties.Height')\n  heightValidate () {\n    this.scrollButtonVerify()\n  }\n\n  @Watch('properties.TabFixedWidth')\n  tabFixedWidthValidate () {\n    this.scrollButtonVerify()\n  }\n\n  @Watch('properties.TabFixedWidth')\n  tabFixedHeightValidate () {\n    this.scrollButtonVerify()\n  }\n\n  /**\n   * @description watches changes in FontSize of Font\n   * @function checkFontValue\n   * @param oldVal previous properties data\n   * @param newVal  new/changed properties data\n   */\n  @Watch('properties.Font.FontSize')\n  checkFontValue (newVal: number, oldVal: number) {\n    this.calculateWidthHeight()\n    this.scrollButtonVerify()\n  }\n\n  /**\n   * @description watches changes in selectedPageData to set the caption\n   * @function captionValue\n   * @param oldVal previous selectedPageData data\n   * @param newVal  new/changed selectedPageData data\n   */\n  @Watch('selectedPageData.properties.Caption')\n  captionValue (newVal: string, oldVal: string) {\n    this.calculateWidthHeight()\n    this.scrollButtonVerify()\n  }\n\n  calculateWidthHeight () {\n    const that = this\n    if (this.controlTabsRef) {\n      const divElement = this.controlTabsRef\n      let tempWidth = 0\n      let tempHeight = 0\n      Vue.nextTick(function () {\n        for (let i = 0; i < divElement.length; i++) {\n          const ele = divElement[i].children[0].children[1]\n            .children[0] as HTMLInputElement\n          if (ele.offsetWidth > tempWidth) {\n            tempWidth = ele.offsetWidth\n          }\n          if (ele.offsetHeight > tempHeight) {\n            tempHeight = ele.offsetHeight\n          }\n        }\n        that.tempWidth = tempWidth\n        that.tempHeight = tempHeight\n      })\n    }\n  }\n  mounted () {\n    this.scrollButtonVerify()\n    this.scrollLeftTop(this.data)\n    this.selectedPageID = this.controls[0]\n    this.calculateWidthHeight()\n    // this.focusPage()\n  }\n  dragSelectorControl (event: MouseEvent) {\n    this.selectedControlArray = []\n    if (\n      this.selectedPageData &&\n      this.controls.length > 0 &&\n      this.controls.includes(this.selectedPageID)\n    ) {\n      this.selectedAreaStyle = this.containerRef.dragSelector.selectAreaStyle\n      this.calSelectedAreaStyle(event, this.selectedPageData)\n    }\n  }\n\n  multiPageMouseDown (e: MouseEvent) {\n    EventBus.$emit('isEditMode', this.isEditMode)\n    this.selectedItem(e)\n    if (this.selMultipleCtrl === false && this.activateCtrl === false) {\n      const selContainer = this.selectedControls[this.userFormId].container[0]\n      const selected = this.selectedControls[this.userFormId].selected\n      if (this.controls.length > 0 && selected.length === 1) {\n        this.selectControl({\n          userFormId: this.userFormId,\n          select: {\n            container: this.getContainerList(this.selectedPageID),\n            selected: [this.selectedPageID]\n          }\n        })\n      }\n      if (selContainer === this.controlId) {\n        if (this.selMultipleCtrl === false && this.activateCtrl === false) {\n          this.selectControl({\n            userFormId: this.userFormId,\n            select: {\n              container: this.getContainerList(this.selectedPageID),\n              selected: [this.selectedPageID]\n            }\n          })\n        }\n      }\n    }\n  }\n  showContextMenu (\n    e: MouseEvent,\n    parentID: string,\n    controlID: string,\n    type: string,\n    mode: boolean\n  ) {\n    e.preventDefault()\n    const selected = this.selectedControls[this.userFormId].selected\n    if (selected[0] === this.controlId && this.controls.length > 0) {\n      this.changeSelect(this.controls[0])\n    }\n    this.multiPageContextMenu = false\n    this.openMenu(e, parentID, controlID, type, mode)\n    Vue.nextTick(() => this.containerRef.contextmenu.focus())\n  }\n  handleKeyDown (event: KeyboardEvent) {\n    this.containerRef.refContextMenu.updateAction(event)\n  }\n  changeSelect (control: string) {\n    this.selectControl({\n      userFormId: this.userFormId,\n      select: {\n        container: this.getContainerList(control),\n        selected: [control]\n      }\n    })\n  }\n  handleContextMenu (e: MouseEvent) {\n    e.preventDefault()\n    const userData = this.userformData[this.userFormId]\n    let selectedPage = -1\n    this.top = `${e.offsetY}px`\n    this.left = `${e.offsetX}px`\n    if (this.isEditMode) {\n      for (const val of this.contextMenuValue) {\n        if (val.id === 'ID_DELETEPAGE' || val.id === 'ID_RENAME') {\n          val.disabled = this.controls.length === 0\n        } else if (val.id === 'ID_MOVE') {\n          val.disabled = this.controls.length <= 1\n        }\n      }\n      this.multiPageContextMenu = true\n      Vue.nextTick(() => this.multipage.focus())\n      this.viewMenu = false\n    }\n  }\n  deleteMultiPage (event: KeyboardEvent) {\n    if (this.controlId === this.selectedControls[this.userFormId].selected[0]) {\n      this.deleteItem(event)\n    } else {\n      this.handleKeyDown(event)\n    }\n  }\n  updateScrollingLeftTop (e: MouseEvent) {\n    const refName = this.contentRef\n    this.updateControl({\n      userFormId: this.userFormId,\n      controlId: this.selectedPageID,\n      propertyName: 'ScrollLeft',\n      value: refName.scrollLeft\n    })\n    this.updateControl({\n      userFormId: this.userFormId,\n      controlId: this.selectedPageID,\n      propertyName: 'ScrollTop',\n      value: refName.scrollTop\n    })\n  }\n  selectMultipleCtrl (event: KeyboardEvent, val: boolean) {\n    if (event.key === 'Control' && event.keyCode === 17) {\n      this.selMultipleCtrl = val\n      EventBus.$emit('selectMultipleCtrl', val)\n    } else if (event.key === 'Shift' && event.keyCode === 16) {\n      this.activateCtrl = val\n      EventBus.$emit('actMultipleCtrl', val)\n    }\n  }\n\n  created () {\n    EventBus.$on('updateMultiPageValue', this.updateValue)\n  }\n  destroyed () {\n    EventBus.$off('updateMultiPageValue')\n  }\n  updateValue () {\n    {\n      const userData = this.userformData[this.userFormId]\n      let selectedPage = -1\n      if (this.controls.length > 0) {\n        selectedPage = this.controls.findIndex(\n          (val) => this.properties.Value === userData[val].properties.Index\n        )\n      }\n      if (this.data.controls.length > 0 && selectedPage !== -1) {\n        this.selectedPageID = this.controls[selectedPage]\n        this.changeSelect(this.controls[selectedPage])\n      } else {\n        this.changeSelect(this.controlId)\n      }\n    }\n  }\n  deleteMultiPageControl (event: KeyboardEvent) {\n    const userData = this.userformData[this.userFormId]\n    if (\n      this.selectedPageID &&\n      this.userformData[this.userFormId][this.selectedPageID].controls.length <=\n        0\n    ) {\n      event.stopPropagation()\n      this.deleteItem(event)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.outer-page {\n  background-color: rgb(238, 238, 238);\n  overflow-y: hidden;\n  overflow-x: hidden;\n  box-sizing: border-box;\n  width: 0px;\n  height: 0px;\n  left: 0px;\n  top: 0px;\n  cursor: default;\n  position: sticky;\n}\n.pages {\n  /* display: grid; */\n  margin: 0;\n  /* width: calc(100%);\n  height: calc(100%); */\n  white-space: nowrap;\n  overflow-x: hidden;\n  overflow-y: hidden;\n}\n.left-button {\n  position: relative;\n  outline: none;\n  background-image: url(\"../../../../assets/left-arrow-img.png\");\n  background-size: 30%;\n  background-position: center;\n  background-repeat: no-repeat;\n  border: 2px solid white;\n  border-right-color: gray;\n  border-bottom-color: gray;\n  top: 3px;\n  right: 15px;\n  width: 22px;\n  height: 18px;\n  padding: 0;\n  margin: 0;\n  overflow: hidden;\n  z-index: 5;\n}\n.right-button {\n  position: relative;\n  outline: none;\n  background-image: url(\"../../../../assets/right-arrow-img.png\");\n  background-size: 30%;\n  background-position: center;\n  background-repeat: no-repeat;\n  border: 2px solid white;\n  border-right-color: gray;\n  border-bottom-color: gray;\n  top: 3px;\n  right: 15px;\n  width: 22px;\n  height: 18px;\n  padding: 0;\n  margin: 0;\n  overflow: hidden;\n  z-index: 5;\n}\n.move {\n  display: grid;\n}\n.page {\n  vertical-align: top;\n  z-index: 1;\n  overflow: hidden;\n}\n.scroll-page {\n  z-index: 2;\n}\n.page label {\n  border: 0.1px solid white;\n  background-color: rgb(238, 238, 238);\n  /* display: inline-block; */\n  padding: 5px 5px 5px 5px;\n  margin: 0;\n  cursor: pointer;\n  position: relative;\n  top: 0px;\n}\n.page [type=\"radio\"] {\n  display: none;\n}\n::-webkit-scrollbar.move {\n  display: none;\n  width: 0;\n  height: 1em;\n  background-color: rgb(238, 238, 238);\n}\n::-webkit-scrollbar.content {\n  width: 0;\n  height: 1em;\n  background-color: rgb(238, 238, 238);\n}\n\n::-webkit-scrollbar-button {\n  background: rgb(238, 238, 238);\n  height: 20px;\n  border: 1px solid lightgray;\n  border-right-color: gray;\n  border-bottom-color: gray;\n}\n\n/* Up */\n::-webkit-scrollbar-button:single-button:horizontal:decrement {\n  background-image: url(\"../../../../assets/triangle-up-img.png\");\n  transform: rotate(90deg);\n  background-size: 10px;\n  background-position: center;\n  background-repeat: no-repeat;\n  /* border-color: lightgrey; */\n}\n\n/* Down */\n::-webkit-scrollbar-button:single-button:horizontal:increment {\n  background-image: url(\"../../../../assets/triangle-down-img.png\");\n  background-size: 10px;\n  background-position: center;\n  background-repeat: no-repeat;\n  /* border-color: lightgrey; */\n}\n\n::-webkit-scrollbar-track-piece {\n  width: 0px;\n}\n\n::-webkit-scrollbar-thumb {\n  background-color: darkgrey;\n  outline: 1px solid slategrey;\n  height: 5px;\n}\n\n.page .content {\n  position: absolute;\n  white-space: normal;\n  top: 23px;\n  left: 0px;\n  /* background: rgb(238, 238, 238); */\n  background-color: white;\n  background-size: 9px 10px;\n  background-image: radial-gradient(\n    circle,\n    rgb(0, 0, 0) 0.5px,\n    rgba(0, 0, 0, 0) 0.2px\n  );\n  height: 100px;\n  right: 0;\n  bottom: 0;\n  padding: 20px;\n  padding-right: 10px;\n  width: calc(100% - 35px);\n  height: calc(100% - 89px);\n  border: 0.1px solid white;\n  box-shadow: 2px 1px gray;\n}\n\n.page [type=\"radio\"]:checked ~ label ~ .content {\n  z-index: 1;\n}\n.content {\n  overflow: auto;\n}\n#right-click-menu {\n  background: #fafafa;\n  border: 1px solid #bdbdbd;\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0 1px 5px 0 rgba(0, 0, 0, 0.12);\n  display: block;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  width: 100px;\n  z-index: 999999;\n}\n\n#right-click-menu li {\n  border-bottom: 1px solid #e0e0e0;\n  margin: 0;\n  padding: 5px 5px;\n}\n\n#right-click-menu li:last-child {\n  border-bottom: none;\n}\n\n#right-click-menu li:hover {\n  background: #1e88e5;\n  color: #fafafa;\n}\n\n.spanClass {\n  text-decoration: underline;\n  text-underline-position: under;\n}\n:focus {\n  outline: none;\n}\n</style>\n"]}]}