{"remainingRequest":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mobiotics/Projects/hancom/formcontrols/src/FormDesigner/components/atoms/FDSpinButton/index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/mobiotics/Projects/hancom/formcontrols/src/FormDesigner/components/atoms/FDSpinButton/index.vue","mtime":1610544258554},{"path":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmltcG9ydCB7IENvbXBvbmVudCwgV2F0Y2gsIEVtaXQsIE1peGlucyB9IGZyb20gJ3Z1ZS1wcm9wZXJ0eS1kZWNvcmF0b3InCmltcG9ydCBGZENvbnRyb2xWdWUgZnJvbSAnQC9hcGkvYWJzdHJhY3QvRm9ybURlc2lnbmVyL0ZkQ29udHJvbFZ1ZScKaW1wb3J0IHsgY29udHJvbFByb3BlcnRpZXMgfSBmcm9tICdAL0Zvcm1EZXNpZ25lci9jb250cm9scy1wcm9wZXJ0aWVzJwpleHBvcnQgaW50ZXJmYWNlIElPcmllbnRhdGlvbnZhbHVlcyB7CiAgb3JpZW50YXRpb24/OiBudW1iZXI7CiAgd2lkdGg/OiBudW1iZXI7CiAgaGVpZ2h0PzogbnVtYmVyOwp9CgpAQ29tcG9uZW50KHsKICBuYW1lOiAnRkRTcGluQnV0dG9uJywKICBjb21wb25lbnRzOiB7CiAgfQp9KQpleHBvcnQgZGVmYXVsdCBjbGFzcyBGRFNwaW5CdXR0b24gZXh0ZW5kcyBNaXhpbnMoRmRDb250cm9sVnVlKSB7CiAgZ2V0Rm9yZUNvbG9yOiBzdHJpbmcgPSAnJzsKICBpc0NsaWNrZWQ6IGJvb2xlYW4gPSBmYWxzZTsKICBjbGFzc1N0eWxlOiBzdHJpbmcgPSAnc3Bpbic7CiAgb3JpZW50ZWRWYWx1ZTogYm9vbGVhbiA9IHRydWU7CiAgc3ZnV2lkdGg6IG51bWJlciA9IDA7CiAgJGVsOiBIVE1MRGl2RWxlbWVudAoKICAvKioKICAgKiBAZGVzY3JpcHRpb24gZ2V0RGlzYWJsZVZhbHVlIGNoZWNrcyBmb3IgdGhlIFJ1bk1vZGUgb3IgdGhlIEVkaXRNb2RlIG9mIHRoZSBjb250cm9sIGFuZCB0aGVuIHJldHVybnMgYWZ0ZXIgY2hlY2tpbmcgZm9yIHRoZSBFbmFibGVkICBwcm9wZXJ0eQogICAqIEBmdW5jdGlvbiBnZXREaXNhYmxlVmFsdWUKICAgKi8KICBnZXQgZ2V0RGlzYWJsZVZhbHVlICgpIHsKICAgIGlmICh0aGlzLmlzUnVuTW9kZSB8fCB0aGlzLmlzRWRpdE1vZGUpIHsKICAgICAgcmV0dXJuIHRoaXMucHJvcGVydGllcy5FbmFibGVkID09PSBmYWxzZQogICAgfSBlbHNlIHsKICAgICAgcmV0dXJuIHRydWUKICAgIH0KICB9CgogIHNldFN2Z1dpZHRoICgpIHsKICAgIGlmICh0aGlzLnByb3BlcnRpZXMuV2lkdGghIC8gdGhpcy5wcm9wZXJ0aWVzLkhlaWdodCEgPCA2KSB7CiAgICAgIHRoaXMuc3ZnV2lkdGggPSB0aGlzLnByb3BlcnRpZXMuV2lkdGghIC8gMTAKICAgICAgcmV0dXJuIHRoaXMuc3ZnV2lkdGggLSAyMAogICAgfSBlbHNlIHsKICAgICAgcmV0dXJuIHRoaXMuc3ZnV2lkdGggLSAyMAogICAgfQogIH0KCiAgLyoqCiAgICogQGRlc2NyaXB0aW9uIHN0eWxlIG9iamVjdCBpcyBwYXNzZWQgdG8gOnN0eWxlIGF0dHJpYnV0ZSBpbiBkaXYgdGFnCiAgICogZHluYW1pY2FsbHkgY2hhbmdpbmcgdGhlIHN0eWxlcyBvZiB0aGUgY29tcG9uZW50IGJhc2VkIG9uIHByb3BlcnRpZXMKICAgKiBAZnVuY3Rpb24gc3R5bGVPYmoKICAgKgogICAqLwogIHByb3RlY3RlZCBnZXQgc3R5bGVPYmogKCk6IFBhcnRpYWw8Q1NTU3R5bGVEZWNsYXJhdGlvbj4gewogICAgY29uc3QgY29udHJvbFByb3AgPSB0aGlzLnByb3BlcnRpZXMKICAgIHJldHVybiB7CiAgICAgIC4uLnRoaXMuYmFzZVN0eWxlLAogICAgICBvdmVyZmxvdzogJ2hpZGRlbicsCiAgICAgIGxlZnQ6IGAke2NvbnRyb2xQcm9wLkxlZnR9cHhgLAogICAgICB3aWR0aDogYCR7Y29udHJvbFByb3AuV2lkdGh9cHhgLAogICAgICBoZWlnaHQ6IGAke2NvbnRyb2xQcm9wLkhlaWdodH1weGAsCiAgICAgIHRvcDogYCR7Y29udHJvbFByb3AuVG9wfXB4YCwKICAgICAgYmFja2dyb3VuZENvbG9yOiBjb250cm9sUHJvcC5CYWNrQ29sb3IsCiAgICAgIGRpc3BsYXk6CiAgICAgICAgY29udHJvbFByb3AuVmlzaWJsZSAmJiB0aGlzLmlzUnVuTW9kZQogICAgICAgICAgPyAnJwogICAgICAgICAgOiBjb250cm9sUHJvcC5WaXNpYmxlID09PSBmYWxzZSAmJiB0aGlzLmlzUnVuTW9kZQogICAgICAgICAgICA/ICdub25lJwogICAgICAgICAgICA6ICcnCiAgICB9CiAgfQoKICAvKioKICAgKiBAZGVzY3JpcHRpb24gc3R5bGUgb2JqZWN0IGlzIHBhc3NlZCB0byA6c3R5bGUgYXR0cmlidXRlIGluIGJ1dHRvbiB0YWcKICAgKiBkeW5hbWljYWxseSBjaGFuZ2luZyB0aGUgc3R5bGVzIG9mIHRoZSBjb21wb25lbnQgYmFzZWQgb24gcHJvcGVydGllcwogICAqIEBmdW5jdGlvbiBzdHlsZUJ1dHRvbgogICAqCiAgICovCiAgcHJvdGVjdGVkIGdldCBzdHlsZUJ1dHRvbiAoKTogUGFydGlhbDxDU1NTdHlsZURlY2xhcmF0aW9uPiB7CiAgICBjb25zdCBjb250cm9sUHJvcCA9IHRoaXMucHJvcGVydGllcwogICAgcmV0dXJuIHsKICAgICAgLi4udGhpcy5iYXNlU3R5bGUsCiAgICAgIGJhY2tncm91bmRDb2xvcjogY29udHJvbFByb3AuQmFja0NvbG9yLAogICAgICBvdmVyZmxvdzogJ2hpZGRlbicsCiAgICAgIGN1cnNvcjoKICAgICAgICBjb250cm9sUHJvcC5Nb3VzZVBvaW50ZXIgIT09IDAgfHwgY29udHJvbFByb3AuTW91c2VJY29uICE9PSAnJwogICAgICAgICAgPyB0aGlzLmdldE1vdXNlQ3Vyc29yRGF0YQogICAgICAgICAgOiAnZGVmYXVsdCcsCiAgICAgIGRpc3BsYXk6CiAgICAgICAgY29udHJvbFByb3AuVmlzaWJsZSAmJiB0aGlzLmlzUnVuTW9kZQogICAgICAgICAgPyAnZmxleCcKICAgICAgICAgIDogY29udHJvbFByb3AuVmlzaWJsZSA9PT0gZmFsc2UgJiYgdGhpcy5pc1J1bk1vZGUKICAgICAgICAgICAgPyAnbm9uZScKICAgICAgICAgICAgOiAnZmxleCcsCiAgICAgIG91dGxpbmU6IGNvbnRyb2xQcm9wLkVuYWJsZWQKICAgICAgICA/IHRoaXMuaXNDbGlja2VkCiAgICAgICAgICA/ICcxcHggc29saWQgYmxhY2snCiAgICAgICAgICA6ICdub25lJwogICAgICAgIDogJ25vbmUnLAogICAgICBvdXRsaW5lT2Zmc2V0OiB0aGlzLmlzQ2xpY2tlZCA/ICctNXB4JyA6ICctNXB4JywKICAgICAgd2lkdGg6ICcxMDAlJywKICAgICAgaGVpZ2h0OiAnMTAwJScsCiAgICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJywKICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicKICAgIH0KICB9CgogIC8qKgogICAqIEBkZXNjcmlwdGlvbiBjaGFuZ2VzIHRoZSBzeWxpbmcgb2YgdGhlIFNwaW5CdXR0b24gYmFzZWQgb24gdGhlIHZhbHVlcyBvZiB0aGUgZ2V0dGVyIG9yaWVudGVkVmFsdWVzCiAgICogQGZ1bmN0aW9uIGNoZWNrT3JpZW50YXRpb24KICAgKgogICAqLwogIEBXYXRjaCgnb3JpZW50YXRpb25WYWx1ZXMnLCB7IGRlZXA6IHRydWUgfSkKICBjaGVja09yaWVudGF0aW9uIChuZXdWYWw6IElPcmllbnRhdGlvbnZhbHVlcywgb2xkVmFsOiBJT3JpZW50YXRpb252YWx1ZXMpIHsKICAgIGlmIChuZXdWYWwub3JpZW50YXRpb24gPT09IDEpIHsKICAgICAgdGhpcy5jbGFzc1N0eWxlID0gJ3NwaW4nCiAgICB9IGVsc2UgaWYgKG5ld1ZhbC5vcmllbnRhdGlvbiA9PT0gMikgewogICAgICB0aGlzLmNsYXNzU3R5bGUgPSAnc3Bpbi1vcmllbnRlZCcKICAgIH0gZWxzZSB7CiAgICAgIHRoaXMub3JpZW50ZWRWYWx1ZSA9IHRoaXMuY2hlY2tPdGhlck9yaWVudGF0aW9ucygpCiAgICAgIGlmICh0aGlzLm9yaWVudGVkVmFsdWUpIHsKICAgICAgICB0aGlzLmNsYXNzU3R5bGUgPSAnc3BpbicKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmNsYXNzU3R5bGUgPSAnc3Bpbi1vcmllbnRlZCcKICAgICAgfQogICAgfQogIH0KCiAgLyoqCiAgICogQGRlc2NyaXB0aW9uIGNoZWNrT3RoZXJPcmllbnRhdGlvbnMgcmV0dXJucyBzdHJpbmcgdmFsdWUgZnJvbQogICAqIGNvbnRyb2xQcm9wZXJ0aWVzLmNvbnRyb2xzT3JpZW50YXRpb25Qcm9wCiAgICogQGZ1bmN0aW9uIGNoZWNrT3RoZXJPcmllbnRhdGlvbnMKICAgKiBAcmV0dXJucyBib29sZWFuIHZhbHVlCiAgICogQG92ZXJyaWRlCiAgICovCiAgY2hlY2tPdGhlck9yaWVudGF0aW9ucyAoKTogYm9vbGVhbiB7CiAgICByZXR1cm4gY29udHJvbFByb3BlcnRpZXMuY29udHJvbHNPcmllbnRhdGlvblByb3AodGhpcy5kYXRhKQogIH0KCiAgLyoqCiAgICogQGRlc2NyaXB0aW9uIG9yaWVudGF0aW9uVmFsdWVzIGlzIHRoZSBnZXR0ZXIgdXNlZCBmb3IgYWxsIHRoZSB2YWx1ZXMgdGhhdCBhZmZlY3QgdGhlIE9yaWVudGF0aW9uIHByb3BlcnR5CiAgICogIEBmdW5jdGlvbiBvcmllbnRhdGlvblZhbHVlcwogICAqLwogIGdldCBvcmllbnRhdGlvblZhbHVlcyAoKSB7CiAgICByZXR1cm4gewogICAgICBvcmllbnRhdGlvbjogdGhpcy5wcm9wZXJ0aWVzLk9yaWVudGF0aW9uLAogICAgICB3aWR0aDogdGhpcy5wcm9wZXJ0aWVzLldpZHRoLAogICAgICBoZWlnaHQ6IHRoaXMucHJvcGVydGllcy5IZWlnaHQKICAgIH0KICB9CgogIG1vdW50ZWQgKCkgewogICAgdGhpcy4kZWwuZm9jdXMoKQogICAgaWYgKHRoaXMucHJvcGVydGllcy5PcmllbnRhdGlvbiA9PT0gMCkgewogICAgICB0aGlzLm9yaWVudGF0aW9uVmFsdWVzLm9yaWVudGF0aW9uID0gMAogICAgICB0aGlzLm9yaWVudGF0aW9uVmFsdWVzLndpZHRoID0gMAogICAgICB0aGlzLm9yaWVudGF0aW9uVmFsdWVzLmhlaWdodCA9IDAKICAgICAgY29uc3QgbmV3VmFsdWVzOklPcmllbnRhdGlvbnZhbHVlcyA9IHRoaXMub3JpZW50YXRpb25WYWx1ZXMKICAgICAgdGhpcy5jaGVja09yaWVudGF0aW9uKG5ld1ZhbHVlcywgdGhpcy5vcmllbnRhdGlvblZhbHVlcykKICAgIH0KICB9CiAgZXZlbnRTdG9wcGVycyAoKSB7CiAgICBjb25zdCBldmVudFN0b3AgPSAoZXZlbnQ6IEV2ZW50KSA9PiBldmVudC5zdG9wUHJvcGFnYXRpb24oKQogICAgcmV0dXJuIHRoaXMuaXNFZGl0TW9kZSA9PT0gZmFsc2UgPyBudWxsIDogewogICAgICBrZXlkb3duOiBldmVudFN0b3AKICAgIH0KICB9Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/FormDesigner/components/atoms/FDSpinButton","sourcesContent":["<template>\n  <div\n  @mousedown=\"controlEditMode\"\n  :tabindex=\"properties.TabIndex\"\n  @keydown.enter=\"setContentEditable($event, true)\"\n  @keydown.esc=\"setContentEditable($event, false)\"\n  v-on=\"eventStoppers()\"\n  >\n<div\n      class=\"outerSpinDiv\"\n      :class=\"classStyle\"\n      :style=\"styleObj\"\n      :title=\"properties.ControlTipText\"\n      @click=\"selectedItem\"\n    >\n      <div\n        @click=\"\n          !getDisableValue\n            ? checkOtherOrientations()\n              ? increaseTheValue((isClicked = true))\n              : decreaseTheValue((isClicked = true))\n            : ''\n        \"\n      >\n        <button\n          class=\"button-element-top\"\n          :style=\"styleButton\"\n          :runmode=\"getDisableValue\"\n          @blur=\"isClicked = false\"\n        >\n          <div v-if=\"checkOtherOrientations()\" >\n            <svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\" :height=\"(properties.Height/2 > 60 && properties.Height < 850) ? properties.Height/2 - 45 : properties.Height >= 850 ? 425 : 15\" :width=\"(properties.Width/2 > 60 && properties.Width < 850) ? properties.Width/2 - 45  : properties.Width >= 850 ? 425 : 15\"\n        viewBox=\"0 0 810.000000 460.000000\"\n        preserveAspectRatio=\"xMidYMid meet\">\n          <g :fill=\"properties.Enabled?properties.ForeColor:'rgb(200,200,200)'\"\n          transform=\"translate(0.000000,460.000000) scale(0.100000,-0.100000)\"\n          stroke=\"none\">\n          <path d=\"M2055 2320 c-1089 -1254 -1980 -2288 -1980 -2298 0 -16 213 -17 3975\n          -17 3525 0 3975 2 3977 15 5 23 -3942 4574 -3969 4578 -19 2 -357 -382 -2003\n          -2278z\"/>\n          </g>\n      </svg>\n          </div>\n          <div v-else>\n            <svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\" id=\"la\" class=\"leftRightArrow\"\n        viewBox=\"0 0 460.000000 810.000000\"  :height=\"(properties.Height/2 > 60 && properties.Height < 850) ? properties.Height/2 - 45 : properties.Height >= 850 ? 425 : 15\" :width=\"(properties.Width/2 > 60 && properties.Width < 850) ? properties.Width/2 - 45  : properties.Width >= 850 ? 425 : 15\"\n        preserveAspectRatio=\"xMidYMid meet\">\n          <g :fill=\"properties.Enabled?properties.ForeColor:'rgb(200,200,200)'\"\n          transform=\"translate(0.000000,810.000000) scale(0.100000,-0.100000)\"\n          stroke=\"none\">\n            <path d=\"M2285 6055 c-1874 -1623 -2280 -1980 -2280 -2000 0 -20 408 -378\n             2280 -2005 1254 -1089 2287 -1979 2295 -1977 13 2 15 452 15 3977 0 3525 -2\n             3975 -15 3977 -8 2 -1041 -886 -2295 -1972z\"/>\n          </g>\n        </svg>\n          </div>\n        </button>\n      </div>\n      <div\n        @click=\"\n          !getDisableValue\n            ? checkOtherOrientations()\n              ? decreaseTheValue((isClicked = true))\n              : increaseTheValue((isClicked = true))\n            : ''\n        \"\n      >\n        <button\n          class=\"button-element-bottom\"\n          :style=\"styleButton\"\n          :runmode=\"getDisableValue\"\n          @blur=\"isClicked = false\"\n        >\n          <div v-if=\"checkOtherOrientations()\">\n            <svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\" :height=\"(properties.Height/2 > 60 && properties.Height < 850) ? properties.Height/2 - 45 : properties.Height >= 850 ? 425 : 15\" :width=\"(properties.Width/2 > 60 && properties.Width < 850) ? properties.Width/2 - 45  : properties.Width >= 850 ? 425 : 15\"\n        viewBox=\"0 0 810.000000 460.000000\"\n        preserveAspectRatio=\"xMidYMid meet\">\n          <g :fill=\"properties.Enabled?properties.ForeColor:'rgb(200,200,200)'\"\n          transform=\"translate(0.000000,460.000000) scale(0.100000,-0.100000)\"\n          stroke=\"none\">\n          <path d=\"M74 4585 c-4 -8 0 -23 7 -32 8 -9 897 -1036 1977 -2282 1612 -1862\n          1967 -2266 1987 -2266 20 0 378 408 2005 2280 1089 1254 1979 2287 1977 2295\n          -2 13 -453 15 -3975 18 -3540 2 -3973 0 -3978 -13z\"/>\n          </g>\n      </svg>\n          </div>\n          <div v-else>\n            <svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\" id=\"ra\" class=\"leftRightArrow\" :height=\"(properties.Height/2 > 60 && properties.Height < 850) ? properties.Height/2 - 45 : properties.Height >= 850 ? 425 : 15\" :width=\"(properties.Width/2 > 60 && properties.Width < 850) ? properties.Width/2 - 45  : properties.Width >= 850 ? 425 : 15\"\n        viewBox=\"0 0 460.000000 810.000000\"\n        preserveAspectRatio=\"xMidYMid meet\">\n          <g :fill=\"properties.Enabled?properties.ForeColor:'rgb(200,200,200)'\"\n          transform=\"translate(0.000000,810.000000) scale(0.100000,-0.100000)\"\n          stroke=\"none\">\n            <path d=\"M5 8018 c-3 -7 -4 -1797 -3 -3978 3 -3515 5 -3965 18 -3967 8 -2\n            1041 886 2295 1972 1874 1623 2280 1980 2280 2000 0 20 -408 378 -2280 2004\n            -1254 1090 -2286 1981 -2293 1981 -7 0 -15 -6 -17 -12z\"/>\n            </g>\n      </svg>\n          </div>\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Watch, Emit, Mixins } from 'vue-property-decorator'\nimport FdControlVue from '@/api/abstract/FormDesigner/FdControlVue'\nimport { controlProperties } from '@/FormDesigner/controls-properties'\nexport interface IOrientationvalues {\n  orientation?: number;\n  width?: number;\n  height?: number;\n}\n\n@Component({\n  name: 'FDSpinButton',\n  components: {\n  }\n})\nexport default class FDSpinButton extends Mixins(FdControlVue) {\n  getForeColor: string = '';\n  isClicked: boolean = false;\n  classStyle: string = 'spin';\n  orientedValue: boolean = true;\n  svgWidth: number = 0;\n  $el: HTMLDivElement\n\n  /**\n   * @description getDisableValue checks for the RunMode or the EditMode of the control and then returns after checking for the Enabled  property\n   * @function getDisableValue\n   */\n  get getDisableValue () {\n    if (this.isRunMode || this.isEditMode) {\n      return this.properties.Enabled === false\n    } else {\n      return true\n    }\n  }\n\n  setSvgWidth () {\n    if (this.properties.Width! / this.properties.Height! < 6) {\n      this.svgWidth = this.properties.Width! / 10\n      return this.svgWidth - 20\n    } else {\n      return this.svgWidth - 20\n    }\n  }\n\n  /**\n   * @description style object is passed to :style attribute in div tag\n   * dynamically changing the styles of the component based on properties\n   * @function styleObj\n   *\n   */\n  protected get styleObj (): Partial<CSSStyleDeclaration> {\n    const controlProp = this.properties\n    return {\n      ...this.baseStyle,\n      overflow: 'hidden',\n      left: `${controlProp.Left}px`,\n      width: `${controlProp.Width}px`,\n      height: `${controlProp.Height}px`,\n      top: `${controlProp.Top}px`,\n      backgroundColor: controlProp.BackColor,\n      display:\n        controlProp.Visible && this.isRunMode\n          ? ''\n          : controlProp.Visible === false && this.isRunMode\n            ? 'none'\n            : ''\n    }\n  }\n\n  /**\n   * @description style object is passed to :style attribute in button tag\n   * dynamically changing the styles of the component based on properties\n   * @function styleButton\n   *\n   */\n  protected get styleButton (): Partial<CSSStyleDeclaration> {\n    const controlProp = this.properties\n    return {\n      ...this.baseStyle,\n      backgroundColor: controlProp.BackColor,\n      overflow: 'hidden',\n      cursor:\n        controlProp.MousePointer !== 0 || controlProp.MouseIcon !== ''\n          ? this.getMouseCursorData\n          : 'default',\n      display:\n        controlProp.Visible && this.isRunMode\n          ? 'flex'\n          : controlProp.Visible === false && this.isRunMode\n            ? 'none'\n            : 'flex',\n      outline: controlProp.Enabled\n        ? this.isClicked\n          ? '1px solid black'\n          : 'none'\n        : 'none',\n      outlineOffset: this.isClicked ? '-5px' : '-5px',\n      width: '100%',\n      height: '100%',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }\n\n  /**\n   * @description changes the syling of the SpinButton based on the values of the getter orientedValues\n   * @function checkOrientation\n   *\n   */\n  @Watch('orientationValues', { deep: true })\n  checkOrientation (newVal: IOrientationvalues, oldVal: IOrientationvalues) {\n    if (newVal.orientation === 1) {\n      this.classStyle = 'spin'\n    } else if (newVal.orientation === 2) {\n      this.classStyle = 'spin-oriented'\n    } else {\n      this.orientedValue = this.checkOtherOrientations()\n      if (this.orientedValue) {\n        this.classStyle = 'spin'\n      } else {\n        this.classStyle = 'spin-oriented'\n      }\n    }\n  }\n\n  /**\n   * @description checkOtherOrientations returns string value from\n   * controlProperties.controlsOrientationProp\n   * @function checkOtherOrientations\n   * @returns boolean value\n   * @override\n   */\n  checkOtherOrientations (): boolean {\n    return controlProperties.controlsOrientationProp(this.data)\n  }\n\n  /**\n   * @description orientationValues is the getter used for all the values that affect the Orientation property\n   *  @function orientationValues\n   */\n  get orientationValues () {\n    return {\n      orientation: this.properties.Orientation,\n      width: this.properties.Width,\n      height: this.properties.Height\n    }\n  }\n\n  mounted () {\n    this.$el.focus()\n    if (this.properties.Orientation === 0) {\n      this.orientationValues.orientation = 0\n      this.orientationValues.width = 0\n      this.orientationValues.height = 0\n      const newValues:IOrientationvalues = this.orientationValues\n      this.checkOrientation(newValues, this.orientationValues)\n    }\n  }\n  eventStoppers () {\n    const eventStop = (event: Event) => event.stopPropagation()\n    return this.isEditMode === false ? null : {\n      keydown: eventStop\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.spin {\n  display: grid;\n  grid-template-columns: 1fr;\n  box-sizing: border-box;\n}\n.spin-oriented {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n}\n.outerSpinDiv {\n  width: 0px;\n  height: 0px;\n  left: 0px;\n  top: 0px;\n}\n.button-element-top {\n  border-color: lightgrey;\n}\n\n.button-element-bottom {\n  border-color: lightgrey;\n}\n:focus {\n  outline: none;\n}\n.button-element-top[runmode]:active {\n  border-style: outset !important;\n}\n.button-element-bottom[runmode]:active {\n  border-style: outset !important;\n}\n</style>\n"]}]}