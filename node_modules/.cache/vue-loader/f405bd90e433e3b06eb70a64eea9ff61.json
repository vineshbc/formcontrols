{"remainingRequest":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mobiotics/Projects/hancom/formcontrols/src/FormDesigner/components/atoms/FDImage/index.vue?vue&type=style&index=0&id=f1f17a5e&scoped=true&lang=css&","dependencies":[{"path":"/home/mobiotics/Projects/hancom/formcontrols/src/FormDesigner/components/atoms/FDImage/index.vue","mtime":1610544258554},{"path":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnBpY3R1cmUgewogIC8qIHBvc2l0aW9uOiByZWxhdGl2ZTsgKi8KICBvdmVyZmxvdzogaGlkZGVuOwogIGJveC1zaXppbmc6IGJvcmRlci1ib3g7CiAgd2lkdGg6IDBweDsKICBoZWlnaHQ6IDBweDsKICBsZWZ0OiAwcHg7CiAgdG9wOiAwcHg7Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/FormDesigner/components/atoms/FDImage","sourcesContent":["<template>\n  <div\n    class=\"picture\"\n    :style=\"cssStyleProperty\"\n    :title=\"properties.ControlTipText\"\n    @keydown.delete=\"deleteItem\"\n    @click.stop=\"selectedItem\"\n  ></div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  Component,\n  Prop,\n  Model,\n  Emit,\n  Mixins,\n  Ref,\n  Watch\n} from 'vue-property-decorator'\nimport FdControlVue from '@/api/abstract/FormDesigner/FdControlVue'\nimport { controlProperties } from '@/FormDesigner/controls-properties'\n\n@Component({\n  name: 'FDImage'\n})\nexport default class FDImage extends Mixins(FdControlVue) {\n  $el!: HTMLDivElement;\n  /**\n   * @description updating width and height of image control\n   * @function updateAutoSize\n   * @param oldVal previous AutoSize value\n   * @param newVal  new/changed AutoSize value\n   */\n  @Watch('properties.AutoSize')\n  updateAutoSize (newVal: boolean, oldVal: boolean) {\n    this.setHeightWidth(newVal)\n  }\n\n  @Watch('properties.Picture')\n  pictureChanges (newVal: string, oldVal: string) {\n    this.setHeightWidth(this.properties.AutoSize!)\n  }\n  /**\n   * @description When AutoSize is true update width and height property\n   * @function setHeightWidth\n   * @param isAutoSize AutoSize property value\n   *\n   */\n  setHeightWidth (isAutoSize: boolean) {\n    const that = this\n    if (isAutoSize && this.properties.Picture) {\n      const img = new Image()\n      img.onload = function () {\n        that.updateDataModel({\n          propertyName: 'Height',\n          value: img.height\n        })\n        that.updateDataModel({\n          propertyName: 'Width',\n          value: img.width\n        })\n      }\n      img.src = this.properties.Picture\n    } else {\n      return undefined\n    }\n  }\n  /**\n   * @description style object is passed to :style attribute in label tag\n   * dynamically changing the styles of the component based on propControlData\n   * @function cssStyleProperty\n   *\n   */\n  protected get cssStyleProperty (): Partial<CSSStyleDeclaration> {\n    const controlProp = this.properties\n    let display = ''\n    if (this.isRunMode) {\n      display = controlProp.Visible ? 'block' : 'none'\n    } else {\n      display = 'block'\n    }\n    return {\n      ...this.baseStyle,\n      left: `${controlProp.Left}px`,\n      width: `${controlProp.Width}px`,\n      height: `${controlProp.Height}px`,\n      top: `${controlProp.Top}px`,\n      backgroundColor: controlProp.BackStyle\n        ? controlProp.BackColor\n        : 'transparent',\n      borderColor: controlProp.BorderStyle === 1 ? controlProp.BorderColor : '',\n      borderLeft: controlProp.BorderStyle === 1 ? '1px solid ' + controlProp.BorderColor : controlProp.SpecialEffect === 2 ? '2px solid gray' : controlProp.SpecialEffect === 3 ? '1.5px solid gray' : controlProp.SpecialEffect === 4 ? '0.5px solid gray' : '',\n      borderRight: controlProp.BorderStyle === 1 ? '1px solid ' + controlProp.BorderColor : controlProp.SpecialEffect === 1 ? '2px solid gray' : controlProp.SpecialEffect === 4 ? '1.5px solid gray' : controlProp.SpecialEffect === 3 ? '0.5px solid gray' : '',\n      borderTop: controlProp.BorderStyle === 1 ? '1px solid ' + controlProp.BorderColor : controlProp.SpecialEffect === 2 ? '2px solid gray' : controlProp.SpecialEffect === 3 ? '1.5px solid gray' : controlProp.SpecialEffect === 4 ? '0.5px solid gray' : '',\n      borderBottom: controlProp.BorderStyle === 1 ? '1px solid ' + controlProp.BorderColor : controlProp.SpecialEffect === 1 ? '2px solid gray' : controlProp.SpecialEffect === 4 ? '1.5px solid gray' : controlProp.SpecialEffect === 3 ? '0.5px solid gray' : '',\n      cursor:\n        controlProp.MousePointer !== 0 || controlProp.MouseIcon !== ''\n          ? this.getMouseCursorData\n          : 'default',\n      backgroundImage: `url(${controlProp.Picture})`,\n      backgroundSize: controlProp.Picture === '' ? '' : this.getSizeMode,\n      backgroundRepeat: this.getRepeatData,\n      backgroundPosition: controlProp.Picture === '' ? '' : this.getPosition,\n      display: display\n    }\n  }\n}\n</script>\n\n<style scoped>\n.picture {\n  /* position: relative; */\n  overflow: hidden;\n  box-sizing: border-box;\n  width: 0px;\n  height: 0px;\n  left: 0px;\n  top: 0px;\n}\n</style>\n"]}]}