{"remainingRequest":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mobiotics/Projects/hancom/formcontrols/src/FormDesigner/components/atoms/FDEditableText/index.vue?vue&type=style&index=0&id=374a6711&scoped=true&lang=css&","dependencies":[{"path":"/home/mobiotics/Projects/hancom/formcontrols/src/FormDesigner/components/atoms/FDEditableText/index.vue","mtime":1610544258554},{"path":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5lZGl0VGV4dCB7CiAgZGlzcGxheTogYmxvY2s7CiAgdGV4dC1hbGlnbjogaW5oZXJpdDsKICBiYWNrZ3JvdW5kOiBpbmhlcml0OwogIGZvbnQ6IGluaGVyaXQ7CiAgYm9yZGVyOiBub25lOwogIG91dGxpbmU6IG5vbmU7CiAgcGFkZGluZzogMDsKICByZXNpemU6IG5vbmU7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKICB0ZXh0LWRlY29yYXRpb246IGluaGVyaXQ7CiAgY29sb3I6IGluaGVyaXQ7CiAgd2hpdGUtc3BhY2U6IGluaGVyaXQ7CiAgd29yZC1icmVhazogaW5oZXJpdDsKfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/FormDesigner/components/atoms/FDEditableText","sourcesContent":["<template>\n  <span\n    class=\"editText\"\n    ref=\"labelArea\"\n    role=\"textbox\"\n    contenteditable=\"true\"\n    :readonly=\"editable === false\"\n    @input=\"onInput\"\n    v-on=\"eventStoppers()\">\n  </span>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Prop, Vue, Ref } from 'vue-property-decorator'\n\n@Component({\n  name: 'FDEditableText'\n})\nexport default class FDEditableText extends Vue {\n  @Prop() private editable! : boolean\n  @Prop() private caption! : string\n\n  @Ref('labelArea') readonly labelArea! : HTMLSpanElement\n\n  mounted () {\n    this.labelArea.innerText = this.caption\n    this.labelArea.focus()\n  }\n\n  eventStoppers () {\n    const eventStop = (event: Event) => event.stopPropagation()\n    return this.editable === false ? null : {\n      mousedown: eventStop,\n      keydown: this.keydownHandle,\n      click: eventStop\n    }\n  }\n\n  keydownHandle (e: KeyboardEvent) {\n    e.stopPropagation()\n    if (e.key === 'Escape') {\n      this.$emit('releaseEditMode')\n    }\n    if (e.key === 'Enter') {\n      e.preventDefault()\n    }\n  }\n\n  onInput (event: KeyboardEvent) {\n    this.$emit('updateCaption', this.labelArea.innerText)\n  }\n}\n</script>\n\n<style scoped>\n  .editText {\n    display: block;\n    text-align: inherit;\n    background: inherit;\n    font: inherit;\n    border: none;\n    outline: none;\n    padding: 0;\n    resize: none;\n    overflow: hidden;\n    text-decoration: inherit;\n    color: inherit;\n    white-space: inherit;\n    word-break: inherit;\n  }\n</style>\n"]}]}