{"remainingRequest":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mobiotics/Projects/hancom/formcontrols/src/FormDesigner/components/atoms/FDCommandButton/index.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/mobiotics/Projects/hancom/formcontrols/src/FormDesigner/components/atoms/FDCommandButton/index.vue","mtime":1611058754771},{"path":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mobiotics/Projects/hancom/formcontrols/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"index.vue","sourceRoot":"src/FormDesigner/components/atoms/FDCommandButton","sourcesContent":["<template>\n  <button\n    class=\"commandbutton\"\n    :style=\"styleObj\"\n    :name=\"properties.Name\"\n    :tabindex=\"properties.TabIndex\"\n    :title=\"properties.ControlTipText\"\n    :runmode=\"getDisableValue\"\n    @blur=\"\n      () => {\n        isClicked = false;\n      }\n    \"\n    @mousedown=\"controlEditMode\"\n    @keydown.enter.prevent=\"setContentEditable($event, true)\"\n    @click.stop=\"commandButtonClick\"\n  >\n  <div id=\"logo\" :style=\"reverseStyle\">\n    <img v-if=\"properties.Picture\" id=\"img\" :src=\"properties.Picture\" :style=\"imageProperty\">\n    <div v-if=\"!syncIsEditMode || isRunMode\" :style=\"labelStyle\">\n      <span>{{ computedCaption.afterbeginCaption }}</span>\n      <span class=\"spanClass\">{{ computedCaption.acceleratorCaption }}</span>\n      <span>{{ computedCaption.beforeendCaption }}</span>\n    </div>\n    <FDEditableText\n      v-else\n      :editable=\"isRunMode === false && syncIsEditMode\"\n      :style=\"labelStyle\"\n      :caption=\"properties.Caption\"\n      @updateCaption=\"updateCaption\"\n      @releaseEditMode=\"releaseEditMode\"\n    >\n    </FDEditableText>\n    </div>\n  </button>\n</template>\n\n<script lang=\"ts\">\n/*eslint-disable */\nimport { Component, Emit, Mixins, Prop, Watch } from 'vue-property-decorator'\nimport FdControlVue from '@/api/abstract/FormDesigner/FdControlVue'\nimport FDEditableText from '@/FormDesigner/components/atoms/FDEditableText/index.vue'\nimport Vue from 'vue'\n\n@Component({\n  name: 'FDCommandButton',\n  components: {\n    FDEditableText\n  }\n})\nexport default class FDCommandButton extends Mixins(FdControlVue) {\n  $el!: HTMLButtonElement;\n  isClicked: boolean = false;\n  isContentEditable: boolean = false;\n  labelStyle = {}\n  reverseStyle = {\n   display : '',\n   flexDirection : '',\n   justifyItems : '',\n   position:'',\n   justifyContent:'center',\n   alignItems: '',\n   width:''\n  }\n  imageProperty = {\n    height:'fit-content'\n  }\n  /**\n   * @description getDisableValue checks for the RunMode of the control and then returns after checking for the Enabled\n   * and the Locked property\n   * @function getDisableValue\n   */\n  get getDisableValue () {\n    if (this.isRunMode) {\n      return (\n        this.properties.Enabled === false || this.properties.Locked === true\n      )\n    } else {\n      return true\n    }\n  }\n\n  /**\n   * @description commandButtonClick is a method to check the check the clicked functionality of the button tag.\n   * Also It sets the variable isClicked based on the Locked property\n   * @function commandButtonClick\n   *\n   */\n  commandButtonClick (e: Event) {\n    if (!this.isRunMode) {\n      this.selectedItem(e)\n    }\n    if (this.isActivated) {\n      if (this.properties.Locked) {\n        this.isClicked = false\n      } else {\n        this.isClicked = true\n      }\n    }\n    if (this.isEditMode) {\n      (this.$el.children[0] as HTMLSpanElement).focus()\n    }\n  }\n\n  /**\n   * @description changes width and height when autoSize is true by getting content offsetWidth\n   *  and offsetHeight with the help of Ref attribute\n   * @function updateAutoSize\n   * @override\n   */\n  updateAutoSize () {\n    if (this.properties.AutoSize === true) {\n      const  imgStyle={\n      width:'fit-content',\n      height:'fit-content'\n      }\n      this.imageProperty = imgStyle\n      if(this.properties.Picture){\n      this.positionLogo(this.properties.PicturePosition)\n      }\n      this.$nextTick(() => {\n        this.updateDataModel({\n          propertyName: 'Height',\n          value: (this.$el.childNodes[0] as HTMLSpanElement).offsetHeight + 5\n        })\n        this.updateDataModel({\n          propertyName: 'Width',\n          value: (this.$el.childNodes[0] as HTMLSpanElement).offsetWidth + 5\n        })\n      })\n    }\n  }\n\n  positionLogo(value:any){\n      let style = {\n        order: Number(),\n        alignItems: '',\n        transform:'',\n        top:'',\n        left:'',\n        position:'',\n        display:'inline-flex',\n        width: '',\n        justifyContent:''\n      }\n      this.reverseStyle = {\n      display : '',\n      flexDirection : '',\n      justifyItems : '',\n      position:'',\n      justifyContent:'center',\n      alignItems: '',\n      width:''\n      }\n      this.reverseStyle.display = 'flex'\n      switch(value) {\n        case 0: \n        break\n        case 1:style.alignItems = 'center'\n        this.reverseStyle.alignItems = 'center'\n        break\n        case 2:style.alignItems = 'flex-end'\n        this.reverseStyle.alignItems = 'flex-end'\n        break\n        case 3: this.reverseStyle.flexDirection = 'row-reverse'\n        break\n        case 4:\n        this.reverseStyle.flexDirection = 'row-reverse'\n        style.alignItems = 'center'\n        this.reverseStyle.alignItems = 'center'\n        break\n        case 5:\n        this.reverseStyle.flexDirection = 'row-reverse'\n        style.alignItems = 'flex-end'\n        this.reverseStyle.alignItems = 'flex-end'\n        break\n        case 6:\n        this.reverseStyle.display = 'grid'\n        break\n        case 7:  \n        this.reverseStyle.display = 'grid'\n        this.reverseStyle.justifyItems = 'center'\n        break\n        case 8:  \n        this.reverseStyle.display = 'grid'\n        this.reverseStyle.justifyItems = 'end'\n        break\n        case 9:  \n        this.reverseStyle.display = 'grid'\n        style.order= -1\n        break\n        case 10:  \n        this.reverseStyle.display = 'grid'\n        this.reverseStyle.justifyItems = 'center'\n        style.order = -1\n        break\n        case 11:  \n        this.reverseStyle.display = 'grid'\n        this.reverseStyle.justifyItems = 'end'\n        style.order= -1\n        break\n        case 12:  \n        this.reverseStyle.position = 'relative'\n        this.reverseStyle.width = '100%'\n        style.position = 'absolute',\n        style.top = '50%',\n        style.left = '50%',\n        style.transform ='translate(-50%, -50%)'\n        style.justifyContent = 'center'\n        style.width = '100%'\n        break\n        default:\n          console.log('none')\n      }\n      // console.log(\"style||\",style)\n      this.labelStyle = style \n    }\n  pictureSize(){\n    const  imgStyle={\n      width:'fit-content',\n      height:'fit-content'\n    }\n    if (this.properties.Picture) {\n        Vue.nextTick(() => {\n          const imgProp = document.getElementById('img')\n           imgStyle.width = this.properties.Width! < imgProp!.clientWidth ? `${this.properties.Width}px` : 'fit-content'\n           imgStyle.height = this.properties.Height! < imgProp!.clientHeight ? `${this.properties.Height}px` : 'fit-content'\n        })\n    }\n    this.imageProperty = imgStyle\n  }\n\n  /**\n   * @description style object is passed to :style attribute in button tag\n   * dynamically changing the styles of the component based on properties\n   * @function styleObj\n   */\n  protected get styleObj (): Partial<CSSStyleDeclaration> {\n    const controlProp = this.properties\n    this.pictureSize()\n    const font: font = controlProp.Font\n      ? controlProp.Font\n      : {\n        FontName: 'Arial',\n        FontSize: 10,\n        FontItalic: true,\n        FontBold: true,\n        FontUnderline: true,\n        FontStrikethrough: true\n      }\n    let display = ''\n    if (this.isRunMode) {\n      display = controlProp.Visible ? 'inline-block' : 'none'\n    } else {\n      display = 'inline-block'\n    }\n    this.reverseStyle.justifyContent = 'center'\n    let alignItems = 'normal'\n    if(controlProp.Picture){\n      display = 'flex'\n      this.positionLogo(controlProp.PicturePosition)\n      let labelStyle = document.getElementById('logo')\n      if (this.properties.Height! > labelStyle!.clientHeight) {\n         alignItems = 'center'\n      }\n    }\n    return {\n      ...(!controlProp.AutoSize && this.renderSize),\n      ...this.baseStyle,\n      left: `${controlProp.Left}px`,\n      width: `${controlProp.Width}px`,\n      height: `${controlProp.Height}px`,\n      top: `${controlProp.Top}px`,\n      borderTopColor: controlProp.Default ? 'black' : controlProp.BackColor,\n      borderBottomColor: controlProp.Default ? 'black' : controlProp.BackColor,\n      borderLeftColor: controlProp.Default ? 'black' : controlProp.BackColor,\n      borderRightColor: controlProp.Default ? 'black' : controlProp.BackColor,\n      outline: controlProp.Enabled\n        ? controlProp.TakeFocusOnClick && this.isClicked\n          ? '1px dotted black'\n          : 'none'\n        : 'none',\n      outlineOffset:\n        controlProp.TakeFocusOnClick && this.isClicked ? '-5px' : '0px',\n      display: display,\n      backgroundColor: controlProp.BackStyle ? controlProp.BackColor : 'transparent',\n      color:\n        controlProp.Enabled === true ? controlProp.ForeColor : this.getEnabled,\n      cursor:\n        controlProp.MousePointer !== 0 || controlProp.MouseIcon !== ''\n          ? this.getMouseCursorData\n          : 'default',\n      fontFamily: (font.FontStyle! !== '') ? this.setFontStyle : font.FontName!,\n      fontSize: `${font.FontSize}px`,\n      fontStyle: font.FontItalic || this.isItalic ? 'italic' : '',\n      textDecoration:\n        font.FontStrikethrough === true && font.FontUnderline === true\n          ? 'underline line-through'\n          : font.FontUnderline\n            ? 'underline'\n            : font.FontStrikethrough\n              ? 'line-through'\n              : '',\n      textUnderlinePosition: 'under',\n      fontWeight: font.FontBold ? 'bold' : (font.FontStyle !== '') ? this.tempWeight : '',\n      fontStretch: (font.FontStyle !== '') ? this.tempStretch : '',\n      whiteSpace: controlProp.WordWrap ? 'pre-wrap' : 'pre',\n      wordBreak: controlProp.WordWrap ? 'break-all' : 'normal',\n      paddingLeft: controlProp.AutoSize ? '0px' : '0px',\n      paddingRight: controlProp.WordWrap ? '0px' : '6px',\n      alignItems: alignItems\n      // backgroundImage: `url(${controlProp.Picture})`,\n      // backgroundRepeat: this.getRepeat,\n      // backgroundPosition: controlProp.Picture ? this.getPosition : '',\n      // backgroundPositionX: controlProp.Picture ? this.getPositionX : '',\n      // backgroundPositionY: controlProp.Picture ? this.getPositionY : ''\n    }\n  }\n  /**\n   * @description style object is passed to :style attribute in tag\n   * dynamically changing the styles of the component based on properties\n   * @function editCssObj\n   *\n   */\n  protected get editCssObj (): Partial<CSSStyleDeclaration> {\n    const controlProp = this.properties\n    return {\n      backgroundImage: 'none'\n    }\n  }\n\n  /**\n   * @description watches changes in propControlData to set autoset when true\n   * @function autoSize\n   * @param oldVal previous propControlData data\n   * @param newVal  new/changed propControlData data\n   */\n  @Watch('properties.AutoSize', { deep: true })\n  autoSize (newVal: boolean, oldVal: boolean) {\n    // if autoSize is true then height and width value will not get updated\n    this.updateAutoSize()\n  }\n\n  @Watch('properties.Font.FontSize', { deep: true })\n  autoSizeValidateOnFontChange () {\n    if (this.properties.AutoSize) {\n      this.updateAutoSize()\n    }\n  }\n\n  @Watch('properties.WordWrap', { deep: true })\n  autoSizeValidateOnWordWrapChange () {\n    if (this.properties.AutoSize) {\n      this.updateAutoSize()\n    }\n  }\n\n  @Watch('properties.Caption', { deep: true })\n  autoSizeValidateOnCaptionChange () {\n    if (this.properties.AutoSize) {\n      this.updateAutoSize()\n    }\n  }\n  /**\n   * @description mounted initializes the values which are required for the component\n   */\n  mounted () {\n    this.$el.focus()\n    this.updateAutoSize()\n  }\n  releaseEditMode (event: KeyboardEvent) {\n    this.$el.focus()\n    this.setContentEditable(event, false)\n  }\n}\n</script>\n\n<style scoped>\n.commandbutton {\n  overflow: hidden;\n  display: inline-block;\n  box-sizing: border-box;\n  width: 0px;\n  height: 0px;\n  left: 0px;\n  top: 0px;\n  align-items: center;\n  justify-content: center;\n}\n.commandbutton[runmode]:active {\n  border-style: outset !important;\n}\n#logo{\n display: inline-flex;\n justify-content: center;\n}\n</style>\n"]}]}